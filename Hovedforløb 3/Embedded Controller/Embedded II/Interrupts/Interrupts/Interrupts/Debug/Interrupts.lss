
Interrupts.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004e  00800100  000009bc  00000a50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080014e  0080014e  00000a9e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000afc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d63  00000000  00000000  00000c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a2c  00000000  00000000  0000198b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067b  00000000  00000000  000023b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000274  00000000  00000000  00002a34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059a  00000000  00000000  00002ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003f0  00000000  00000000  00003242  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003632  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 bc 01 	jmp	0x378	; 0x378 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec eb       	ldi	r30, 0xBC	; 188
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 34       	cpi	r26, 0x4E	; 78
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e4       	ldi	r26, 0x4E	; 78
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 35       	cpi	r26, 0x58	; 88
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
#include "UART.h"
#include "MyTimer.h"

int main(void)
{
	RS232Init();
  a6:	0e 94 a4 01 	call	0x348	; 0x348 <RS232Init>
	Enable_UART_Receive_Interrupt();
  aa:	0e 94 b6 01 	call	0x36c	; 0x36c <Enable_UART_Receive_Interrupt>
	SetupTimer();
  ae:	0e 94 b4 00 	call	0x168	; 0x168 <SetupTimer>
	sei();
  b2:	78 94       	sei
#include "DanielTypes.h"
#include "UART.h"
#include "MyTimer.h"

int main(void)
{
  b4:	30 e0       	ldi	r19, 0x00	; 0
	sei();
	
	uint8_t newLine = 0;
	while (1) 
	{
		for (uint8_t i = 0; i < sizeof(callbacks)/sizeof(callbacks[0]); i++)
  b6:	c0 e0       	ldi	r28, 0x00	; 0
  b8:	34 c0       	rjmp	.+104    	; 0x122 <main+0x7c>
		{
			if (callbacks[i].toggle == 1) {
  ba:	8c 2f       	mov	r24, r28
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	fc 01       	movw	r30, r24
  c0:	ee 0f       	add	r30, r30
  c2:	ff 1f       	adc	r31, r31
  c4:	ee 0f       	add	r30, r30
  c6:	ff 1f       	adc	r31, r31
  c8:	ee 0f       	add	r30, r30
  ca:	ff 1f       	adc	r31, r31
  cc:	e8 1b       	sub	r30, r24
  ce:	f9 0b       	sbc	r31, r25
  d0:	e0 50       	subi	r30, 0x00	; 0
  d2:	ff 4f       	sbci	r31, 0xFF	; 255
  d4:	22 81       	ldd	r18, Z+2	; 0x02
  d6:	21 30       	cpi	r18, 0x01	; 1
  d8:	19 f5       	brne	.+70     	; 0x120 <main+0x7a>
				printf("Callback%d true. Result: %d\n", i + 1, callbacks[i].result);
  da:	8f 01       	movw	r16, r30
  dc:	33 96       	adiw	r30, 0x03	; 3
  de:	23 81       	ldd	r18, Z+3	; 0x03
  e0:	2f 93       	push	r18
  e2:	22 81       	ldd	r18, Z+2	; 0x02
  e4:	2f 93       	push	r18
  e6:	21 81       	ldd	r18, Z+1	; 0x01
  e8:	2f 93       	push	r18
  ea:	f8 01       	movw	r30, r16
  ec:	23 81       	ldd	r18, Z+3	; 0x03
  ee:	2f 93       	push	r18
  f0:	01 96       	adiw	r24, 0x01	; 1
  f2:	9f 93       	push	r25
  f4:	8f 93       	push	r24
  f6:	81 e3       	ldi	r24, 0x31	; 49
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	9f 93       	push	r25
  fc:	8f 93       	push	r24
  fe:	0e 94 f7 01 	call	0x3ee	; 0x3ee <printf>
				callbacks[i].toggle = ToggleOccured(callbacks[i].toggle);
 102:	f8 01       	movw	r30, r16
 104:	82 81       	ldd	r24, Z+2	; 0x02
 106:	0e 94 9a 00 	call	0x134	; 0x134 <ToggleOccured>
 10a:	f8 01       	movw	r30, r16
 10c:	82 83       	std	Z+2, r24	; 0x02
 10e:	8d b7       	in	r24, 0x3d	; 61
 110:	9e b7       	in	r25, 0x3e	; 62
 112:	08 96       	adiw	r24, 0x08	; 8
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	f8 94       	cli
 118:	9e bf       	out	0x3e, r25	; 62
 11a:	0f be       	out	0x3f, r0	; 63
 11c:	8d bf       	out	0x3d, r24	; 61
				newLine = 1;
 11e:	31 e0       	ldi	r19, 0x01	; 1
	sei();
	
	uint8_t newLine = 0;
	while (1) 
	{
		for (uint8_t i = 0; i < sizeof(callbacks)/sizeof(callbacks[0]); i++)
 120:	cf 5f       	subi	r28, 0xFF	; 255
 122:	c3 30       	cpi	r28, 0x03	; 3
 124:	50 f2       	brcs	.-108    	; 0xba <main+0x14>
				printf("Callback%d true. Result: %d\n", i + 1, callbacks[i].result);
				callbacks[i].toggle = ToggleOccured(callbacks[i].toggle);
				newLine = 1;
			}
		}
		if (newLine	== 1)
 126:	31 30       	cpi	r19, 0x01	; 1
 128:	31 f6       	brne	.-116    	; 0xb6 <main+0x10>
		{
			printf("\n");
 12a:	8a e0       	ldi	r24, 0x0A	; 10
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 0d 02 	call	0x41a	; 0x41a <putchar>
 132:	c0 cf       	rjmp	.-128    	; 0xb4 <main+0xe>

00000134 <ToggleOccured>:
}
void EnableTimer() {
	TIMSK1 |= (1 << OCIE1A); //Turn on Output Compare A
}
void DisableTimer() {
	TIMSK1 &= ~(1 << OCIE1A); //Turn off Output Compare A
 134:	91 e0       	ldi	r25, 0x01	; 1
 136:	81 30       	cpi	r24, 0x01	; 1
 138:	09 f4       	brne	.+2      	; 0x13c <ToggleOccured+0x8>
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	89 2f       	mov	r24, r25
 13e:	08 95       	ret

00000140 <ConvertReceivedChar>:
 140:	fc 01       	movw	r30, r24
 142:	90 81       	ld	r25, Z
 144:	8f eb       	ldi	r24, 0xBF	; 191
 146:	89 0f       	add	r24, r25
 148:	8d 31       	cpi	r24, 0x1D	; 29
 14a:	20 f0       	brcs	.+8      	; 0x154 <ConvertReceivedChar+0x14>
 14c:	8f e9       	ldi	r24, 0x9F	; 159
 14e:	89 0f       	add	r24, r25
 150:	8d 31       	cpi	r24, 0x1D	; 29
 152:	18 f4       	brcc	.+6      	; 0x15a <ConvertReceivedChar+0x1a>
 154:	20 e2       	ldi	r18, 0x20	; 32
 156:	92 27       	eor	r25, r18
 158:	90 83       	st	Z, r25
 15a:	08 95       	ret

0000015c <EnableTimer>:
 15c:	ef e6       	ldi	r30, 0x6F	; 111
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	82 60       	ori	r24, 0x02	; 2
 164:	80 83       	st	Z, r24
 166:	08 95       	ret

00000168 <SetupTimer>:
 168:	e1 e8       	ldi	r30, 0x81	; 129
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	84 60       	ori	r24, 0x04	; 4
 170:	80 83       	st	Z, r24
 172:	a8 e8       	ldi	r26, 0x88	; 136
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	8d 91       	ld	r24, X+
 178:	9c 91       	ld	r25, X
 17a:	11 97       	sbiw	r26, 0x01	; 1
 17c:	84 62       	ori	r24, 0x24	; 36
 17e:	94 6f       	ori	r25, 0xF4	; 244
 180:	11 96       	adiw	r26, 0x01	; 1
 182:	9c 93       	st	X, r25
 184:	8e 93       	st	-X, r24
 186:	80 81       	ld	r24, Z
 188:	88 60       	ori	r24, 0x08	; 8
 18a:	80 83       	st	Z, r24
 18c:	84 b1       	in	r24, 0x04	; 4
 18e:	81 60       	ori	r24, 0x01	; 1
 190:	84 b9       	out	0x04, r24	; 4
 192:	0e 94 ae 00 	call	0x15c	; 0x15c <EnableTimer>
 196:	08 95       	ret

00000198 <__vector_11>:
}

ISR(TIMER1_COMPA_vect) {
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	1f 93       	push	r17
 1a4:	2f 93       	push	r18
 1a6:	3f 93       	push	r19
 1a8:	4f 93       	push	r20
 1aa:	5f 93       	push	r21
 1ac:	6f 93       	push	r22
 1ae:	7f 93       	push	r23
 1b0:	8f 93       	push	r24
 1b2:	9f 93       	push	r25
 1b4:	af 93       	push	r26
 1b6:	bf 93       	push	r27
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	ef 93       	push	r30
 1be:	ff 93       	push	r31
	for (uint8_t i = 0; i < sizeof(callbacks)/sizeof(callbacks[0]); i++)
 1c0:	10 e0       	ldi	r17, 0x00	; 0
 1c2:	20 c0       	rjmp	.+64     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
	{
		callbacks[i].result = callbacks[i].callback(callbacks[i]);
 1c4:	81 2f       	mov	r24, r17
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	ec 01       	movw	r28, r24
 1ca:	cc 0f       	add	r28, r28
 1cc:	dd 1f       	adc	r29, r29
 1ce:	cc 0f       	add	r28, r28
 1d0:	dd 1f       	adc	r29, r29
 1d2:	cc 0f       	add	r28, r28
 1d4:	dd 1f       	adc	r29, r29
 1d6:	c8 1b       	sub	r28, r24
 1d8:	d9 0b       	sbc	r29, r25
 1da:	c0 50       	subi	r28, 0x00	; 0
 1dc:	df 4f       	sbci	r29, 0xFF	; 255
 1de:	e8 81       	ld	r30, Y
 1e0:	f9 81       	ldd	r31, Y+1	; 0x01
 1e2:	28 81       	ld	r18, Y
 1e4:	39 81       	ldd	r19, Y+1	; 0x01
 1e6:	4a 81       	ldd	r20, Y+2	; 0x02
 1e8:	5b 81       	ldd	r21, Y+3	; 0x03
 1ea:	6c 81       	ldd	r22, Y+4	; 0x04
 1ec:	7d 81       	ldd	r23, Y+5	; 0x05
 1ee:	8e 81       	ldd	r24, Y+6	; 0x06
 1f0:	09 95       	icall
 1f2:	6b 83       	std	Y+3, r22	; 0x03
 1f4:	7c 83       	std	Y+4, r23	; 0x04
 1f6:	8d 83       	std	Y+5, r24	; 0x05
 1f8:	9e 83       	std	Y+6, r25	; 0x06
		callbacks[i].toggle = ToggleOccured(callbacks[i].toggle);
 1fa:	8a 81       	ldd	r24, Y+2	; 0x02
 1fc:	0e 94 9a 00 	call	0x134	; 0x134 <ToggleOccured>
 200:	8a 83       	std	Y+2, r24	; 0x02
void DisableTimer() {
	TIMSK1 &= ~(1 << OCIE1A); //Turn off Output Compare A
}

ISR(TIMER1_COMPA_vect) {
	for (uint8_t i = 0; i < sizeof(callbacks)/sizeof(callbacks[0]); i++)
 202:	1f 5f       	subi	r17, 0xFF	; 255
 204:	13 30       	cpi	r17, 0x03	; 3
 206:	f0 f2       	brcs	.-68     	; 0x1c4 <__vector_11+0x2c>
	{
		callbacks[i].result = callbacks[i].callback(callbacks[i]);
		callbacks[i].toggle = ToggleOccured(callbacks[i].toggle);
	}
	
	sei();
 208:	78 94       	sei
}
 20a:	ff 91       	pop	r31
 20c:	ef 91       	pop	r30
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	bf 91       	pop	r27
 214:	af 91       	pop	r26
 216:	9f 91       	pop	r25
 218:	8f 91       	pop	r24
 21a:	7f 91       	pop	r23
 21c:	6f 91       	pop	r22
 21e:	5f 91       	pop	r21
 220:	4f 91       	pop	r20
 222:	3f 91       	pop	r19
 224:	2f 91       	pop	r18
 226:	1f 91       	pop	r17
 228:	0f 90       	pop	r0
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	0f 90       	pop	r0
 22e:	1f 90       	pop	r1
 230:	18 95       	reti

00000232 <TimerCallbackOne>:
//int Counter = 0;
static volatile uint32_t Counter = 0;
#define LED PB0 //digitalPin 8

uint32_t TimerCallbackOne(Callbacking cb)
{
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	cd b7       	in	r28, 0x3d	; 61
 238:	de b7       	in	r29, 0x3e	; 62
 23a:	27 97       	sbiw	r28, 0x07	; 7
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	f8 94       	cli
 240:	de bf       	out	0x3e, r29	; 62
 242:	0f be       	out	0x3f, r0	; 63
 244:	cd bf       	out	0x3d, r28	; 61
 246:	29 83       	std	Y+1, r18	; 0x01
 248:	3a 83       	std	Y+2, r19	; 0x02
 24a:	4b 83       	std	Y+3, r20	; 0x03
 24c:	5c 83       	std	Y+4, r21	; 0x04
 24e:	6d 83       	std	Y+5, r22	; 0x05
 250:	7e 83       	std	Y+6, r23	; 0x06
 252:	8f 83       	std	Y+7, r24	; 0x07
	Counter++;
 254:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <__data_end>
 258:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <__data_end+0x1>
 25c:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <__data_end+0x2>
 260:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <__data_end+0x3>
 264:	01 96       	adiw	r24, 0x01	; 1
 266:	a1 1d       	adc	r26, r1
 268:	b1 1d       	adc	r27, r1
 26a:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__data_end>
 26e:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <__data_end+0x1>
 272:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <__data_end+0x2>
 276:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <__data_end+0x3>
	
	return Counter;
 27a:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <__data_end>
 27e:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <__data_end+0x1>
 282:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end+0x2>
 286:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x3>
}
 28a:	27 96       	adiw	r28, 0x07	; 7
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	f8 94       	cli
 290:	de bf       	out	0x3e, r29	; 62
 292:	0f be       	out	0x3f, r0	; 63
 294:	cd bf       	out	0x3d, r28	; 61
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	08 95       	ret

0000029c <TimerCallbackTwo>:

uint32_t TimerCallbackTwo(Callbacking cb) 
{
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	cd b7       	in	r28, 0x3d	; 61
 2a2:	de b7       	in	r29, 0x3e	; 62
 2a4:	27 97       	sbiw	r28, 0x07	; 7
 2a6:	0f b6       	in	r0, 0x3f	; 63
 2a8:	f8 94       	cli
 2aa:	de bf       	out	0x3e, r29	; 62
 2ac:	0f be       	out	0x3f, r0	; 63
 2ae:	cd bf       	out	0x3d, r28	; 61
 2b0:	29 83       	std	Y+1, r18	; 0x01
 2b2:	3a 83       	std	Y+2, r19	; 0x02
 2b4:	4b 83       	std	Y+3, r20	; 0x03
 2b6:	5c 83       	std	Y+4, r21	; 0x04
 2b8:	6d 83       	std	Y+5, r22	; 0x05
 2ba:	7e 83       	std	Y+6, r23	; 0x06
 2bc:	8f 83       	std	Y+7, r24	; 0x07
	PORTB ^= (1 << LED);
 2be:	95 b1       	in	r25, 0x05	; 5
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	89 27       	eor	r24, r25
 2c4:	85 b9       	out	0x05, r24	; 5
	return LED;
}
 2c6:	60 e0       	ldi	r22, 0x00	; 0
 2c8:	70 e0       	ldi	r23, 0x00	; 0
 2ca:	cb 01       	movw	r24, r22
 2cc:	27 96       	adiw	r28, 0x07	; 7
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	f8 94       	cli
 2d2:	de bf       	out	0x3e, r29	; 62
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	cd bf       	out	0x3d, r28	; 61
 2d8:	df 91       	pop	r29
 2da:	cf 91       	pop	r28
 2dc:	08 95       	ret

000002de <TimerCallbackThree>:

uint32_t TimerCallbackThree(Callbacking cb) 
{
 2de:	cf 93       	push	r28
 2e0:	df 93       	push	r29
 2e2:	cd b7       	in	r28, 0x3d	; 61
 2e4:	de b7       	in	r29, 0x3e	; 62
 2e6:	27 97       	sbiw	r28, 0x07	; 7
 2e8:	0f b6       	in	r0, 0x3f	; 63
 2ea:	f8 94       	cli
 2ec:	de bf       	out	0x3e, r29	; 62
 2ee:	0f be       	out	0x3f, r0	; 63
 2f0:	cd bf       	out	0x3d, r28	; 61
	return 0;
 2f2:	60 e0       	ldi	r22, 0x00	; 0
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	cb 01       	movw	r24, r22
 2f8:	27 96       	adiw	r28, 0x07	; 7
 2fa:	0f b6       	in	r0, 0x3f	; 63
 2fc:	f8 94       	cli
 2fe:	de bf       	out	0x3e, r29	; 62
 300:	0f be       	out	0x3f, r0	; 63
 302:	cd bf       	out	0x3d, r28	; 61
 304:	df 91       	pop	r29
 306:	cf 91       	pop	r28
 308:	08 95       	ret

0000030a <uart_getch>:
{
	UCSR0B |= (1 << RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXC)
}
void Disable_UART_Receive_Interupt()
{
	UCSR0B &= ~(1 << RXCIE0); // Disable the USART Receive Complete interrupt (USART_RXC)
 30a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
 30e:	88 23       	and	r24, r24
 310:	e4 f7       	brge	.-8      	; 0x30a <uart_getch>
 312:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	08 95       	ret

0000031a <uart_putch>:
 31a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
 31e:	95 ff       	sbrs	r25, 5
 320:	fc cf       	rjmp	.-8      	; 0x31a <uart_putch>
 322:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	08 95       	ret

0000032c <SetupOutputStreamToUart>:
 32c:	83 e2       	ldi	r24, 0x23	; 35
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <__iob+0x3>
 334:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__iob+0x2>
 338:	08 95       	ret

0000033a <SetupInputStreamToUart>:
 33a:	85 e1       	ldi	r24, 0x15	; 21
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <__iob+0x1>
 342:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__iob>
 346:	08 95       	ret

00000348 <RS232Init>:
 348:	87 e6       	ldi	r24, 0x67	; 103
 34a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
 34e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
 352:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
 356:	88 e1       	ldi	r24, 0x18	; 24
 358:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
 35c:	86 e0       	ldi	r24, 0x06	; 6
 35e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
 362:	0e 94 96 01 	call	0x32c	; 0x32c <SetupOutputStreamToUart>
 366:	0e 94 9d 01 	call	0x33a	; 0x33a <SetupInputStreamToUart>
 36a:	08 95       	ret

0000036c <Enable_UART_Receive_Interrupt>:
 36c:	e1 ec       	ldi	r30, 0xC1	; 193
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	80 81       	ld	r24, Z
 372:	80 68       	ori	r24, 0x80	; 128
 374:	80 83       	st	Z, r24
 376:	08 95       	ret

00000378 <__vector_18>:
}

ISR(USR0_Vect_Num)
{
 378:	1f 92       	push	r1
 37a:	0f 92       	push	r0
 37c:	0f b6       	in	r0, 0x3f	; 63
 37e:	0f 92       	push	r0
 380:	11 24       	eor	r1, r1
 382:	0f 93       	push	r16
 384:	1f 93       	push	r17
 386:	2f 93       	push	r18
 388:	3f 93       	push	r19
 38a:	4f 93       	push	r20
 38c:	5f 93       	push	r21
 38e:	6f 93       	push	r22
 390:	7f 93       	push	r23
 392:	8f 93       	push	r24
 394:	9f 93       	push	r25
 396:	af 93       	push	r26
 398:	bf 93       	push	r27
 39a:	ef 93       	push	r30
 39c:	ff 93       	push	r31
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	1f 92       	push	r1
 3a4:	cd b7       	in	r28, 0x3d	; 61
 3a6:	de b7       	in	r29, 0x3e	; 62
	char ReceivedByte = UDR0;
 3a8:	06 ec       	ldi	r16, 0xC6	; 198
 3aa:	10 e0       	ldi	r17, 0x00	; 0
 3ac:	f8 01       	movw	r30, r16
 3ae:	80 81       	ld	r24, Z
 3b0:	89 83       	std	Y+1, r24	; 0x01
	ConvertReceivedChar(&ReceivedByte);
 3b2:	ce 01       	movw	r24, r28
 3b4:	01 96       	adiw	r24, 0x01	; 1
 3b6:	0e 94 a0 00 	call	0x140	; 0x140 <ConvertReceivedChar>
	UDR0 = ReceivedByte; // Echo back the received byte converted to the computer
 3ba:	89 81       	ldd	r24, Y+1	; 0x01
 3bc:	f8 01       	movw	r30, r16
 3be:	80 83       	st	Z, r24
	sei();
 3c0:	78 94       	sei
}
 3c2:	0f 90       	pop	r0
 3c4:	df 91       	pop	r29
 3c6:	cf 91       	pop	r28
 3c8:	ff 91       	pop	r31
 3ca:	ef 91       	pop	r30
 3cc:	bf 91       	pop	r27
 3ce:	af 91       	pop	r26
 3d0:	9f 91       	pop	r25
 3d2:	8f 91       	pop	r24
 3d4:	7f 91       	pop	r23
 3d6:	6f 91       	pop	r22
 3d8:	5f 91       	pop	r21
 3da:	4f 91       	pop	r20
 3dc:	3f 91       	pop	r19
 3de:	2f 91       	pop	r18
 3e0:	1f 91       	pop	r17
 3e2:	0f 91       	pop	r16
 3e4:	0f 90       	pop	r0
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	0f 90       	pop	r0
 3ea:	1f 90       	pop	r1
 3ec:	18 95       	reti

000003ee <printf>:
 3ee:	a0 e0       	ldi	r26, 0x00	; 0
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	ed ef       	ldi	r30, 0xFD	; 253
 3f4:	f1 e0       	ldi	r31, 0x01	; 1
 3f6:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__prologue_saves__+0x20>
 3fa:	ae 01       	movw	r20, r28
 3fc:	4b 5f       	subi	r20, 0xFB	; 251
 3fe:	5f 4f       	sbci	r21, 0xFF	; 255
 400:	fa 01       	movw	r30, r20
 402:	61 91       	ld	r22, Z+
 404:	71 91       	ld	r23, Z+
 406:	af 01       	movw	r20, r30
 408:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__iob+0x2>
 40c:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <__iob+0x3>
 410:	0e 94 14 02 	call	0x428	; 0x428 <vfprintf>
 414:	e2 e0       	ldi	r30, 0x02	; 2
 416:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__epilogue_restores__+0x20>

0000041a <putchar>:
 41a:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <__iob+0x2>
 41e:	70 91 55 01 	lds	r23, 0x0155	; 0x800155 <__iob+0x3>
 422:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 426:	08 95       	ret

00000428 <vfprintf>:
 428:	ab e0       	ldi	r26, 0x0B	; 11
 42a:	b0 e0       	ldi	r27, 0x00	; 0
 42c:	ea e1       	ldi	r30, 0x1A	; 26
 42e:	f2 e0       	ldi	r31, 0x02	; 2
 430:	0c 94 a5 04 	jmp	0x94a	; 0x94a <__prologue_saves__>
 434:	6c 01       	movw	r12, r24
 436:	7b 01       	movw	r14, r22
 438:	8a 01       	movw	r16, r20
 43a:	fc 01       	movw	r30, r24
 43c:	17 82       	std	Z+7, r1	; 0x07
 43e:	16 82       	std	Z+6, r1	; 0x06
 440:	83 81       	ldd	r24, Z+3	; 0x03
 442:	81 ff       	sbrs	r24, 1
 444:	cc c1       	rjmp	.+920    	; 0x7de <__stack+0x2df>
 446:	ce 01       	movw	r24, r28
 448:	01 96       	adiw	r24, 0x01	; 1
 44a:	3c 01       	movw	r6, r24
 44c:	f6 01       	movw	r30, r12
 44e:	93 81       	ldd	r25, Z+3	; 0x03
 450:	f7 01       	movw	r30, r14
 452:	93 fd       	sbrc	r25, 3
 454:	85 91       	lpm	r24, Z+
 456:	93 ff       	sbrs	r25, 3
 458:	81 91       	ld	r24, Z+
 45a:	7f 01       	movw	r14, r30
 45c:	88 23       	and	r24, r24
 45e:	09 f4       	brne	.+2      	; 0x462 <vfprintf+0x3a>
 460:	ba c1       	rjmp	.+884    	; 0x7d6 <__stack+0x2d7>
 462:	85 32       	cpi	r24, 0x25	; 37
 464:	39 f4       	brne	.+14     	; 0x474 <vfprintf+0x4c>
 466:	93 fd       	sbrc	r25, 3
 468:	85 91       	lpm	r24, Z+
 46a:	93 ff       	sbrs	r25, 3
 46c:	81 91       	ld	r24, Z+
 46e:	7f 01       	movw	r14, r30
 470:	85 32       	cpi	r24, 0x25	; 37
 472:	29 f4       	brne	.+10     	; 0x47e <vfprintf+0x56>
 474:	b6 01       	movw	r22, r12
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 47c:	e7 cf       	rjmp	.-50     	; 0x44c <vfprintf+0x24>
 47e:	91 2c       	mov	r9, r1
 480:	21 2c       	mov	r2, r1
 482:	31 2c       	mov	r3, r1
 484:	ff e1       	ldi	r31, 0x1F	; 31
 486:	f3 15       	cp	r31, r3
 488:	d8 f0       	brcs	.+54     	; 0x4c0 <vfprintf+0x98>
 48a:	8b 32       	cpi	r24, 0x2B	; 43
 48c:	79 f0       	breq	.+30     	; 0x4ac <vfprintf+0x84>
 48e:	38 f4       	brcc	.+14     	; 0x49e <vfprintf+0x76>
 490:	80 32       	cpi	r24, 0x20	; 32
 492:	79 f0       	breq	.+30     	; 0x4b2 <vfprintf+0x8a>
 494:	83 32       	cpi	r24, 0x23	; 35
 496:	a1 f4       	brne	.+40     	; 0x4c0 <vfprintf+0x98>
 498:	23 2d       	mov	r18, r3
 49a:	20 61       	ori	r18, 0x10	; 16
 49c:	1d c0       	rjmp	.+58     	; 0x4d8 <vfprintf+0xb0>
 49e:	8d 32       	cpi	r24, 0x2D	; 45
 4a0:	61 f0       	breq	.+24     	; 0x4ba <vfprintf+0x92>
 4a2:	80 33       	cpi	r24, 0x30	; 48
 4a4:	69 f4       	brne	.+26     	; 0x4c0 <vfprintf+0x98>
 4a6:	23 2d       	mov	r18, r3
 4a8:	21 60       	ori	r18, 0x01	; 1
 4aa:	16 c0       	rjmp	.+44     	; 0x4d8 <vfprintf+0xb0>
 4ac:	83 2d       	mov	r24, r3
 4ae:	82 60       	ori	r24, 0x02	; 2
 4b0:	38 2e       	mov	r3, r24
 4b2:	e3 2d       	mov	r30, r3
 4b4:	e4 60       	ori	r30, 0x04	; 4
 4b6:	3e 2e       	mov	r3, r30
 4b8:	2a c0       	rjmp	.+84     	; 0x50e <__stack+0xf>
 4ba:	f3 2d       	mov	r31, r3
 4bc:	f8 60       	ori	r31, 0x08	; 8
 4be:	1d c0       	rjmp	.+58     	; 0x4fa <vfprintf+0xd2>
 4c0:	37 fc       	sbrc	r3, 7
 4c2:	2d c0       	rjmp	.+90     	; 0x51e <__stack+0x1f>
 4c4:	20 ed       	ldi	r18, 0xD0	; 208
 4c6:	28 0f       	add	r18, r24
 4c8:	2a 30       	cpi	r18, 0x0A	; 10
 4ca:	40 f0       	brcs	.+16     	; 0x4dc <vfprintf+0xb4>
 4cc:	8e 32       	cpi	r24, 0x2E	; 46
 4ce:	b9 f4       	brne	.+46     	; 0x4fe <vfprintf+0xd6>
 4d0:	36 fc       	sbrc	r3, 6
 4d2:	81 c1       	rjmp	.+770    	; 0x7d6 <__stack+0x2d7>
 4d4:	23 2d       	mov	r18, r3
 4d6:	20 64       	ori	r18, 0x40	; 64
 4d8:	32 2e       	mov	r3, r18
 4da:	19 c0       	rjmp	.+50     	; 0x50e <__stack+0xf>
 4dc:	36 fe       	sbrs	r3, 6
 4de:	06 c0       	rjmp	.+12     	; 0x4ec <vfprintf+0xc4>
 4e0:	8a e0       	ldi	r24, 0x0A	; 10
 4e2:	98 9e       	mul	r9, r24
 4e4:	20 0d       	add	r18, r0
 4e6:	11 24       	eor	r1, r1
 4e8:	92 2e       	mov	r9, r18
 4ea:	11 c0       	rjmp	.+34     	; 0x50e <__stack+0xf>
 4ec:	ea e0       	ldi	r30, 0x0A	; 10
 4ee:	2e 9e       	mul	r2, r30
 4f0:	20 0d       	add	r18, r0
 4f2:	11 24       	eor	r1, r1
 4f4:	22 2e       	mov	r2, r18
 4f6:	f3 2d       	mov	r31, r3
 4f8:	f0 62       	ori	r31, 0x20	; 32
 4fa:	3f 2e       	mov	r3, r31
 4fc:	08 c0       	rjmp	.+16     	; 0x50e <__stack+0xf>
 4fe:	8c 36       	cpi	r24, 0x6C	; 108
 500:	21 f4       	brne	.+8      	; 0x50a <__stack+0xb>
 502:	83 2d       	mov	r24, r3
 504:	80 68       	ori	r24, 0x80	; 128
 506:	38 2e       	mov	r3, r24
 508:	02 c0       	rjmp	.+4      	; 0x50e <__stack+0xf>
 50a:	88 36       	cpi	r24, 0x68	; 104
 50c:	41 f4       	brne	.+16     	; 0x51e <__stack+0x1f>
 50e:	f7 01       	movw	r30, r14
 510:	93 fd       	sbrc	r25, 3
 512:	85 91       	lpm	r24, Z+
 514:	93 ff       	sbrs	r25, 3
 516:	81 91       	ld	r24, Z+
 518:	7f 01       	movw	r14, r30
 51a:	81 11       	cpse	r24, r1
 51c:	b3 cf       	rjmp	.-154    	; 0x484 <vfprintf+0x5c>
 51e:	98 2f       	mov	r25, r24
 520:	9f 7d       	andi	r25, 0xDF	; 223
 522:	95 54       	subi	r25, 0x45	; 69
 524:	93 30       	cpi	r25, 0x03	; 3
 526:	28 f4       	brcc	.+10     	; 0x532 <__stack+0x33>
 528:	0c 5f       	subi	r16, 0xFC	; 252
 52a:	1f 4f       	sbci	r17, 0xFF	; 255
 52c:	9f e3       	ldi	r25, 0x3F	; 63
 52e:	99 83       	std	Y+1, r25	; 0x01
 530:	0d c0       	rjmp	.+26     	; 0x54c <__stack+0x4d>
 532:	83 36       	cpi	r24, 0x63	; 99
 534:	31 f0       	breq	.+12     	; 0x542 <__stack+0x43>
 536:	83 37       	cpi	r24, 0x73	; 115
 538:	71 f0       	breq	.+28     	; 0x556 <__stack+0x57>
 53a:	83 35       	cpi	r24, 0x53	; 83
 53c:	09 f0       	breq	.+2      	; 0x540 <__stack+0x41>
 53e:	59 c0       	rjmp	.+178    	; 0x5f2 <__stack+0xf3>
 540:	21 c0       	rjmp	.+66     	; 0x584 <__stack+0x85>
 542:	f8 01       	movw	r30, r16
 544:	80 81       	ld	r24, Z
 546:	89 83       	std	Y+1, r24	; 0x01
 548:	0e 5f       	subi	r16, 0xFE	; 254
 54a:	1f 4f       	sbci	r17, 0xFF	; 255
 54c:	88 24       	eor	r8, r8
 54e:	83 94       	inc	r8
 550:	91 2c       	mov	r9, r1
 552:	53 01       	movw	r10, r6
 554:	13 c0       	rjmp	.+38     	; 0x57c <__stack+0x7d>
 556:	28 01       	movw	r4, r16
 558:	f2 e0       	ldi	r31, 0x02	; 2
 55a:	4f 0e       	add	r4, r31
 55c:	51 1c       	adc	r5, r1
 55e:	f8 01       	movw	r30, r16
 560:	a0 80       	ld	r10, Z
 562:	b1 80       	ldd	r11, Z+1	; 0x01
 564:	36 fe       	sbrs	r3, 6
 566:	03 c0       	rjmp	.+6      	; 0x56e <__stack+0x6f>
 568:	69 2d       	mov	r22, r9
 56a:	70 e0       	ldi	r23, 0x00	; 0
 56c:	02 c0       	rjmp	.+4      	; 0x572 <__stack+0x73>
 56e:	6f ef       	ldi	r22, 0xFF	; 255
 570:	7f ef       	ldi	r23, 0xFF	; 255
 572:	c5 01       	movw	r24, r10
 574:	0e 94 00 04 	call	0x800	; 0x800 <strnlen>
 578:	4c 01       	movw	r8, r24
 57a:	82 01       	movw	r16, r4
 57c:	f3 2d       	mov	r31, r3
 57e:	ff 77       	andi	r31, 0x7F	; 127
 580:	3f 2e       	mov	r3, r31
 582:	16 c0       	rjmp	.+44     	; 0x5b0 <__stack+0xb1>
 584:	28 01       	movw	r4, r16
 586:	22 e0       	ldi	r18, 0x02	; 2
 588:	42 0e       	add	r4, r18
 58a:	51 1c       	adc	r5, r1
 58c:	f8 01       	movw	r30, r16
 58e:	a0 80       	ld	r10, Z
 590:	b1 80       	ldd	r11, Z+1	; 0x01
 592:	36 fe       	sbrs	r3, 6
 594:	03 c0       	rjmp	.+6      	; 0x59c <__stack+0x9d>
 596:	69 2d       	mov	r22, r9
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <__stack+0xa1>
 59c:	6f ef       	ldi	r22, 0xFF	; 255
 59e:	7f ef       	ldi	r23, 0xFF	; 255
 5a0:	c5 01       	movw	r24, r10
 5a2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <strnlen_P>
 5a6:	4c 01       	movw	r8, r24
 5a8:	f3 2d       	mov	r31, r3
 5aa:	f0 68       	ori	r31, 0x80	; 128
 5ac:	3f 2e       	mov	r3, r31
 5ae:	82 01       	movw	r16, r4
 5b0:	33 fc       	sbrc	r3, 3
 5b2:	1b c0       	rjmp	.+54     	; 0x5ea <__stack+0xeb>
 5b4:	82 2d       	mov	r24, r2
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	88 16       	cp	r8, r24
 5ba:	99 06       	cpc	r9, r25
 5bc:	b0 f4       	brcc	.+44     	; 0x5ea <__stack+0xeb>
 5be:	b6 01       	movw	r22, r12
 5c0:	80 e2       	ldi	r24, 0x20	; 32
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 5c8:	2a 94       	dec	r2
 5ca:	f4 cf       	rjmp	.-24     	; 0x5b4 <__stack+0xb5>
 5cc:	f5 01       	movw	r30, r10
 5ce:	37 fc       	sbrc	r3, 7
 5d0:	85 91       	lpm	r24, Z+
 5d2:	37 fe       	sbrs	r3, 7
 5d4:	81 91       	ld	r24, Z+
 5d6:	5f 01       	movw	r10, r30
 5d8:	b6 01       	movw	r22, r12
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 5e0:	21 10       	cpse	r2, r1
 5e2:	2a 94       	dec	r2
 5e4:	21 e0       	ldi	r18, 0x01	; 1
 5e6:	82 1a       	sub	r8, r18
 5e8:	91 08       	sbc	r9, r1
 5ea:	81 14       	cp	r8, r1
 5ec:	91 04       	cpc	r9, r1
 5ee:	71 f7       	brne	.-36     	; 0x5cc <__stack+0xcd>
 5f0:	e8 c0       	rjmp	.+464    	; 0x7c2 <__stack+0x2c3>
 5f2:	84 36       	cpi	r24, 0x64	; 100
 5f4:	11 f0       	breq	.+4      	; 0x5fa <__stack+0xfb>
 5f6:	89 36       	cpi	r24, 0x69	; 105
 5f8:	41 f5       	brne	.+80     	; 0x64a <__stack+0x14b>
 5fa:	f8 01       	movw	r30, r16
 5fc:	37 fe       	sbrs	r3, 7
 5fe:	07 c0       	rjmp	.+14     	; 0x60e <__stack+0x10f>
 600:	60 81       	ld	r22, Z
 602:	71 81       	ldd	r23, Z+1	; 0x01
 604:	82 81       	ldd	r24, Z+2	; 0x02
 606:	93 81       	ldd	r25, Z+3	; 0x03
 608:	0c 5f       	subi	r16, 0xFC	; 252
 60a:	1f 4f       	sbci	r17, 0xFF	; 255
 60c:	08 c0       	rjmp	.+16     	; 0x61e <__stack+0x11f>
 60e:	60 81       	ld	r22, Z
 610:	71 81       	ldd	r23, Z+1	; 0x01
 612:	07 2e       	mov	r0, r23
 614:	00 0c       	add	r0, r0
 616:	88 0b       	sbc	r24, r24
 618:	99 0b       	sbc	r25, r25
 61a:	0e 5f       	subi	r16, 0xFE	; 254
 61c:	1f 4f       	sbci	r17, 0xFF	; 255
 61e:	f3 2d       	mov	r31, r3
 620:	ff 76       	andi	r31, 0x6F	; 111
 622:	3f 2e       	mov	r3, r31
 624:	97 ff       	sbrs	r25, 7
 626:	09 c0       	rjmp	.+18     	; 0x63a <__stack+0x13b>
 628:	90 95       	com	r25
 62a:	80 95       	com	r24
 62c:	70 95       	com	r23
 62e:	61 95       	neg	r22
 630:	7f 4f       	sbci	r23, 0xFF	; 255
 632:	8f 4f       	sbci	r24, 0xFF	; 255
 634:	9f 4f       	sbci	r25, 0xFF	; 255
 636:	f0 68       	ori	r31, 0x80	; 128
 638:	3f 2e       	mov	r3, r31
 63a:	2a e0       	ldi	r18, 0x0A	; 10
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	a3 01       	movw	r20, r6
 640:	0e 94 47 04 	call	0x88e	; 0x88e <__ultoa_invert>
 644:	88 2e       	mov	r8, r24
 646:	86 18       	sub	r8, r6
 648:	45 c0       	rjmp	.+138    	; 0x6d4 <__stack+0x1d5>
 64a:	85 37       	cpi	r24, 0x75	; 117
 64c:	31 f4       	brne	.+12     	; 0x65a <__stack+0x15b>
 64e:	23 2d       	mov	r18, r3
 650:	2f 7e       	andi	r18, 0xEF	; 239
 652:	b2 2e       	mov	r11, r18
 654:	2a e0       	ldi	r18, 0x0A	; 10
 656:	30 e0       	ldi	r19, 0x00	; 0
 658:	25 c0       	rjmp	.+74     	; 0x6a4 <__stack+0x1a5>
 65a:	93 2d       	mov	r25, r3
 65c:	99 7f       	andi	r25, 0xF9	; 249
 65e:	b9 2e       	mov	r11, r25
 660:	8f 36       	cpi	r24, 0x6F	; 111
 662:	c1 f0       	breq	.+48     	; 0x694 <__stack+0x195>
 664:	18 f4       	brcc	.+6      	; 0x66c <__stack+0x16d>
 666:	88 35       	cpi	r24, 0x58	; 88
 668:	79 f0       	breq	.+30     	; 0x688 <__stack+0x189>
 66a:	b5 c0       	rjmp	.+362    	; 0x7d6 <__stack+0x2d7>
 66c:	80 37       	cpi	r24, 0x70	; 112
 66e:	19 f0       	breq	.+6      	; 0x676 <__stack+0x177>
 670:	88 37       	cpi	r24, 0x78	; 120
 672:	21 f0       	breq	.+8      	; 0x67c <__stack+0x17d>
 674:	b0 c0       	rjmp	.+352    	; 0x7d6 <__stack+0x2d7>
 676:	e9 2f       	mov	r30, r25
 678:	e0 61       	ori	r30, 0x10	; 16
 67a:	be 2e       	mov	r11, r30
 67c:	b4 fe       	sbrs	r11, 4
 67e:	0d c0       	rjmp	.+26     	; 0x69a <__stack+0x19b>
 680:	fb 2d       	mov	r31, r11
 682:	f4 60       	ori	r31, 0x04	; 4
 684:	bf 2e       	mov	r11, r31
 686:	09 c0       	rjmp	.+18     	; 0x69a <__stack+0x19b>
 688:	34 fe       	sbrs	r3, 4
 68a:	0a c0       	rjmp	.+20     	; 0x6a0 <__stack+0x1a1>
 68c:	29 2f       	mov	r18, r25
 68e:	26 60       	ori	r18, 0x06	; 6
 690:	b2 2e       	mov	r11, r18
 692:	06 c0       	rjmp	.+12     	; 0x6a0 <__stack+0x1a1>
 694:	28 e0       	ldi	r18, 0x08	; 8
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	05 c0       	rjmp	.+10     	; 0x6a4 <__stack+0x1a5>
 69a:	20 e1       	ldi	r18, 0x10	; 16
 69c:	30 e0       	ldi	r19, 0x00	; 0
 69e:	02 c0       	rjmp	.+4      	; 0x6a4 <__stack+0x1a5>
 6a0:	20 e1       	ldi	r18, 0x10	; 16
 6a2:	32 e0       	ldi	r19, 0x02	; 2
 6a4:	f8 01       	movw	r30, r16
 6a6:	b7 fe       	sbrs	r11, 7
 6a8:	07 c0       	rjmp	.+14     	; 0x6b8 <__stack+0x1b9>
 6aa:	60 81       	ld	r22, Z
 6ac:	71 81       	ldd	r23, Z+1	; 0x01
 6ae:	82 81       	ldd	r24, Z+2	; 0x02
 6b0:	93 81       	ldd	r25, Z+3	; 0x03
 6b2:	0c 5f       	subi	r16, 0xFC	; 252
 6b4:	1f 4f       	sbci	r17, 0xFF	; 255
 6b6:	06 c0       	rjmp	.+12     	; 0x6c4 <__stack+0x1c5>
 6b8:	60 81       	ld	r22, Z
 6ba:	71 81       	ldd	r23, Z+1	; 0x01
 6bc:	80 e0       	ldi	r24, 0x00	; 0
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	0e 5f       	subi	r16, 0xFE	; 254
 6c2:	1f 4f       	sbci	r17, 0xFF	; 255
 6c4:	a3 01       	movw	r20, r6
 6c6:	0e 94 47 04 	call	0x88e	; 0x88e <__ultoa_invert>
 6ca:	88 2e       	mov	r8, r24
 6cc:	86 18       	sub	r8, r6
 6ce:	fb 2d       	mov	r31, r11
 6d0:	ff 77       	andi	r31, 0x7F	; 127
 6d2:	3f 2e       	mov	r3, r31
 6d4:	36 fe       	sbrs	r3, 6
 6d6:	0d c0       	rjmp	.+26     	; 0x6f2 <__stack+0x1f3>
 6d8:	23 2d       	mov	r18, r3
 6da:	2e 7f       	andi	r18, 0xFE	; 254
 6dc:	a2 2e       	mov	r10, r18
 6de:	89 14       	cp	r8, r9
 6e0:	58 f4       	brcc	.+22     	; 0x6f8 <__stack+0x1f9>
 6e2:	34 fe       	sbrs	r3, 4
 6e4:	0b c0       	rjmp	.+22     	; 0x6fc <__stack+0x1fd>
 6e6:	32 fc       	sbrc	r3, 2
 6e8:	09 c0       	rjmp	.+18     	; 0x6fc <__stack+0x1fd>
 6ea:	83 2d       	mov	r24, r3
 6ec:	8e 7e       	andi	r24, 0xEE	; 238
 6ee:	a8 2e       	mov	r10, r24
 6f0:	05 c0       	rjmp	.+10     	; 0x6fc <__stack+0x1fd>
 6f2:	b8 2c       	mov	r11, r8
 6f4:	a3 2c       	mov	r10, r3
 6f6:	03 c0       	rjmp	.+6      	; 0x6fe <__stack+0x1ff>
 6f8:	b8 2c       	mov	r11, r8
 6fa:	01 c0       	rjmp	.+2      	; 0x6fe <__stack+0x1ff>
 6fc:	b9 2c       	mov	r11, r9
 6fe:	a4 fe       	sbrs	r10, 4
 700:	0f c0       	rjmp	.+30     	; 0x720 <__stack+0x221>
 702:	fe 01       	movw	r30, r28
 704:	e8 0d       	add	r30, r8
 706:	f1 1d       	adc	r31, r1
 708:	80 81       	ld	r24, Z
 70a:	80 33       	cpi	r24, 0x30	; 48
 70c:	21 f4       	brne	.+8      	; 0x716 <__stack+0x217>
 70e:	9a 2d       	mov	r25, r10
 710:	99 7e       	andi	r25, 0xE9	; 233
 712:	a9 2e       	mov	r10, r25
 714:	09 c0       	rjmp	.+18     	; 0x728 <__stack+0x229>
 716:	a2 fe       	sbrs	r10, 2
 718:	06 c0       	rjmp	.+12     	; 0x726 <__stack+0x227>
 71a:	b3 94       	inc	r11
 71c:	b3 94       	inc	r11
 71e:	04 c0       	rjmp	.+8      	; 0x728 <__stack+0x229>
 720:	8a 2d       	mov	r24, r10
 722:	86 78       	andi	r24, 0x86	; 134
 724:	09 f0       	breq	.+2      	; 0x728 <__stack+0x229>
 726:	b3 94       	inc	r11
 728:	a3 fc       	sbrc	r10, 3
 72a:	11 c0       	rjmp	.+34     	; 0x74e <__stack+0x24f>
 72c:	a0 fe       	sbrs	r10, 0
 72e:	06 c0       	rjmp	.+12     	; 0x73c <__stack+0x23d>
 730:	b2 14       	cp	r11, r2
 732:	88 f4       	brcc	.+34     	; 0x756 <__stack+0x257>
 734:	28 0c       	add	r2, r8
 736:	92 2c       	mov	r9, r2
 738:	9b 18       	sub	r9, r11
 73a:	0e c0       	rjmp	.+28     	; 0x758 <__stack+0x259>
 73c:	b2 14       	cp	r11, r2
 73e:	60 f4       	brcc	.+24     	; 0x758 <__stack+0x259>
 740:	b6 01       	movw	r22, r12
 742:	80 e2       	ldi	r24, 0x20	; 32
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 74a:	b3 94       	inc	r11
 74c:	f7 cf       	rjmp	.-18     	; 0x73c <__stack+0x23d>
 74e:	b2 14       	cp	r11, r2
 750:	18 f4       	brcc	.+6      	; 0x758 <__stack+0x259>
 752:	2b 18       	sub	r2, r11
 754:	02 c0       	rjmp	.+4      	; 0x75a <__stack+0x25b>
 756:	98 2c       	mov	r9, r8
 758:	21 2c       	mov	r2, r1
 75a:	a4 fe       	sbrs	r10, 4
 75c:	10 c0       	rjmp	.+32     	; 0x77e <__stack+0x27f>
 75e:	b6 01       	movw	r22, r12
 760:	80 e3       	ldi	r24, 0x30	; 48
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 768:	a2 fe       	sbrs	r10, 2
 76a:	17 c0       	rjmp	.+46     	; 0x79a <__stack+0x29b>
 76c:	a1 fc       	sbrc	r10, 1
 76e:	03 c0       	rjmp	.+6      	; 0x776 <__stack+0x277>
 770:	88 e7       	ldi	r24, 0x78	; 120
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	02 c0       	rjmp	.+4      	; 0x77a <__stack+0x27b>
 776:	88 e5       	ldi	r24, 0x58	; 88
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	b6 01       	movw	r22, r12
 77c:	0c c0       	rjmp	.+24     	; 0x796 <__stack+0x297>
 77e:	8a 2d       	mov	r24, r10
 780:	86 78       	andi	r24, 0x86	; 134
 782:	59 f0       	breq	.+22     	; 0x79a <__stack+0x29b>
 784:	a1 fe       	sbrs	r10, 1
 786:	02 c0       	rjmp	.+4      	; 0x78c <__stack+0x28d>
 788:	8b e2       	ldi	r24, 0x2B	; 43
 78a:	01 c0       	rjmp	.+2      	; 0x78e <__stack+0x28f>
 78c:	80 e2       	ldi	r24, 0x20	; 32
 78e:	a7 fc       	sbrc	r10, 7
 790:	8d e2       	ldi	r24, 0x2D	; 45
 792:	b6 01       	movw	r22, r12
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 79a:	89 14       	cp	r8, r9
 79c:	38 f4       	brcc	.+14     	; 0x7ac <__stack+0x2ad>
 79e:	b6 01       	movw	r22, r12
 7a0:	80 e3       	ldi	r24, 0x30	; 48
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 7a8:	9a 94       	dec	r9
 7aa:	f7 cf       	rjmp	.-18     	; 0x79a <__stack+0x29b>
 7ac:	8a 94       	dec	r8
 7ae:	f3 01       	movw	r30, r6
 7b0:	e8 0d       	add	r30, r8
 7b2:	f1 1d       	adc	r31, r1
 7b4:	80 81       	ld	r24, Z
 7b6:	b6 01       	movw	r22, r12
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 7be:	81 10       	cpse	r8, r1
 7c0:	f5 cf       	rjmp	.-22     	; 0x7ac <__stack+0x2ad>
 7c2:	22 20       	and	r2, r2
 7c4:	09 f4       	brne	.+2      	; 0x7c8 <__stack+0x2c9>
 7c6:	42 ce       	rjmp	.-892    	; 0x44c <vfprintf+0x24>
 7c8:	b6 01       	movw	r22, r12
 7ca:	80 e2       	ldi	r24, 0x20	; 32
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	0e 94 0b 04 	call	0x816	; 0x816 <fputc>
 7d2:	2a 94       	dec	r2
 7d4:	f6 cf       	rjmp	.-20     	; 0x7c2 <__stack+0x2c3>
 7d6:	f6 01       	movw	r30, r12
 7d8:	86 81       	ldd	r24, Z+6	; 0x06
 7da:	97 81       	ldd	r25, Z+7	; 0x07
 7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <__stack+0x2e3>
 7de:	8f ef       	ldi	r24, 0xFF	; 255
 7e0:	9f ef       	ldi	r25, 0xFF	; 255
 7e2:	2b 96       	adiw	r28, 0x0b	; 11
 7e4:	e2 e1       	ldi	r30, 0x12	; 18
 7e6:	0c 94 c1 04 	jmp	0x982	; 0x982 <__epilogue_restores__>

000007ea <strnlen_P>:
 7ea:	fc 01       	movw	r30, r24
 7ec:	05 90       	lpm	r0, Z+
 7ee:	61 50       	subi	r22, 0x01	; 1
 7f0:	70 40       	sbci	r23, 0x00	; 0
 7f2:	01 10       	cpse	r0, r1
 7f4:	d8 f7       	brcc	.-10     	; 0x7ec <strnlen_P+0x2>
 7f6:	80 95       	com	r24
 7f8:	90 95       	com	r25
 7fa:	8e 0f       	add	r24, r30
 7fc:	9f 1f       	adc	r25, r31
 7fe:	08 95       	ret

00000800 <strnlen>:
 800:	fc 01       	movw	r30, r24
 802:	61 50       	subi	r22, 0x01	; 1
 804:	70 40       	sbci	r23, 0x00	; 0
 806:	01 90       	ld	r0, Z+
 808:	01 10       	cpse	r0, r1
 80a:	d8 f7       	brcc	.-10     	; 0x802 <strnlen+0x2>
 80c:	80 95       	com	r24
 80e:	90 95       	com	r25
 810:	8e 0f       	add	r24, r30
 812:	9f 1f       	adc	r25, r31
 814:	08 95       	ret

00000816 <fputc>:
 816:	0f 93       	push	r16
 818:	1f 93       	push	r17
 81a:	cf 93       	push	r28
 81c:	df 93       	push	r29
 81e:	fb 01       	movw	r30, r22
 820:	23 81       	ldd	r18, Z+3	; 0x03
 822:	21 fd       	sbrc	r18, 1
 824:	03 c0       	rjmp	.+6      	; 0x82c <fputc+0x16>
 826:	8f ef       	ldi	r24, 0xFF	; 255
 828:	9f ef       	ldi	r25, 0xFF	; 255
 82a:	2c c0       	rjmp	.+88     	; 0x884 <fputc+0x6e>
 82c:	22 ff       	sbrs	r18, 2
 82e:	16 c0       	rjmp	.+44     	; 0x85c <fputc+0x46>
 830:	46 81       	ldd	r20, Z+6	; 0x06
 832:	57 81       	ldd	r21, Z+7	; 0x07
 834:	24 81       	ldd	r18, Z+4	; 0x04
 836:	35 81       	ldd	r19, Z+5	; 0x05
 838:	42 17       	cp	r20, r18
 83a:	53 07       	cpc	r21, r19
 83c:	44 f4       	brge	.+16     	; 0x84e <fputc+0x38>
 83e:	a0 81       	ld	r26, Z
 840:	b1 81       	ldd	r27, Z+1	; 0x01
 842:	9d 01       	movw	r18, r26
 844:	2f 5f       	subi	r18, 0xFF	; 255
 846:	3f 4f       	sbci	r19, 0xFF	; 255
 848:	31 83       	std	Z+1, r19	; 0x01
 84a:	20 83       	st	Z, r18
 84c:	8c 93       	st	X, r24
 84e:	26 81       	ldd	r18, Z+6	; 0x06
 850:	37 81       	ldd	r19, Z+7	; 0x07
 852:	2f 5f       	subi	r18, 0xFF	; 255
 854:	3f 4f       	sbci	r19, 0xFF	; 255
 856:	37 83       	std	Z+7, r19	; 0x07
 858:	26 83       	std	Z+6, r18	; 0x06
 85a:	14 c0       	rjmp	.+40     	; 0x884 <fputc+0x6e>
 85c:	8b 01       	movw	r16, r22
 85e:	ec 01       	movw	r28, r24
 860:	fb 01       	movw	r30, r22
 862:	00 84       	ldd	r0, Z+8	; 0x08
 864:	f1 85       	ldd	r31, Z+9	; 0x09
 866:	e0 2d       	mov	r30, r0
 868:	09 95       	icall
 86a:	89 2b       	or	r24, r25
 86c:	e1 f6       	brne	.-72     	; 0x826 <fputc+0x10>
 86e:	d8 01       	movw	r26, r16
 870:	16 96       	adiw	r26, 0x06	; 6
 872:	8d 91       	ld	r24, X+
 874:	9c 91       	ld	r25, X
 876:	17 97       	sbiw	r26, 0x07	; 7
 878:	01 96       	adiw	r24, 0x01	; 1
 87a:	17 96       	adiw	r26, 0x07	; 7
 87c:	9c 93       	st	X, r25
 87e:	8e 93       	st	-X, r24
 880:	16 97       	sbiw	r26, 0x06	; 6
 882:	ce 01       	movw	r24, r28
 884:	df 91       	pop	r29
 886:	cf 91       	pop	r28
 888:	1f 91       	pop	r17
 88a:	0f 91       	pop	r16
 88c:	08 95       	ret

0000088e <__ultoa_invert>:
 88e:	fa 01       	movw	r30, r20
 890:	aa 27       	eor	r26, r26
 892:	28 30       	cpi	r18, 0x08	; 8
 894:	51 f1       	breq	.+84     	; 0x8ea <__ultoa_invert+0x5c>
 896:	20 31       	cpi	r18, 0x10	; 16
 898:	81 f1       	breq	.+96     	; 0x8fa <__ultoa_invert+0x6c>
 89a:	e8 94       	clt
 89c:	6f 93       	push	r22
 89e:	6e 7f       	andi	r22, 0xFE	; 254
 8a0:	6e 5f       	subi	r22, 0xFE	; 254
 8a2:	7f 4f       	sbci	r23, 0xFF	; 255
 8a4:	8f 4f       	sbci	r24, 0xFF	; 255
 8a6:	9f 4f       	sbci	r25, 0xFF	; 255
 8a8:	af 4f       	sbci	r26, 0xFF	; 255
 8aa:	b1 e0       	ldi	r27, 0x01	; 1
 8ac:	3e d0       	rcall	.+124    	; 0x92a <__ultoa_invert+0x9c>
 8ae:	b4 e0       	ldi	r27, 0x04	; 4
 8b0:	3c d0       	rcall	.+120    	; 0x92a <__ultoa_invert+0x9c>
 8b2:	67 0f       	add	r22, r23
 8b4:	78 1f       	adc	r23, r24
 8b6:	89 1f       	adc	r24, r25
 8b8:	9a 1f       	adc	r25, r26
 8ba:	a1 1d       	adc	r26, r1
 8bc:	68 0f       	add	r22, r24
 8be:	79 1f       	adc	r23, r25
 8c0:	8a 1f       	adc	r24, r26
 8c2:	91 1d       	adc	r25, r1
 8c4:	a1 1d       	adc	r26, r1
 8c6:	6a 0f       	add	r22, r26
 8c8:	71 1d       	adc	r23, r1
 8ca:	81 1d       	adc	r24, r1
 8cc:	91 1d       	adc	r25, r1
 8ce:	a1 1d       	adc	r26, r1
 8d0:	20 d0       	rcall	.+64     	; 0x912 <__ultoa_invert+0x84>
 8d2:	09 f4       	brne	.+2      	; 0x8d6 <__ultoa_invert+0x48>
 8d4:	68 94       	set
 8d6:	3f 91       	pop	r19
 8d8:	2a e0       	ldi	r18, 0x0A	; 10
 8da:	26 9f       	mul	r18, r22
 8dc:	11 24       	eor	r1, r1
 8de:	30 19       	sub	r19, r0
 8e0:	30 5d       	subi	r19, 0xD0	; 208
 8e2:	31 93       	st	Z+, r19
 8e4:	de f6       	brtc	.-74     	; 0x89c <__ultoa_invert+0xe>
 8e6:	cf 01       	movw	r24, r30
 8e8:	08 95       	ret
 8ea:	46 2f       	mov	r20, r22
 8ec:	47 70       	andi	r20, 0x07	; 7
 8ee:	40 5d       	subi	r20, 0xD0	; 208
 8f0:	41 93       	st	Z+, r20
 8f2:	b3 e0       	ldi	r27, 0x03	; 3
 8f4:	0f d0       	rcall	.+30     	; 0x914 <__ultoa_invert+0x86>
 8f6:	c9 f7       	brne	.-14     	; 0x8ea <__ultoa_invert+0x5c>
 8f8:	f6 cf       	rjmp	.-20     	; 0x8e6 <__ultoa_invert+0x58>
 8fa:	46 2f       	mov	r20, r22
 8fc:	4f 70       	andi	r20, 0x0F	; 15
 8fe:	40 5d       	subi	r20, 0xD0	; 208
 900:	4a 33       	cpi	r20, 0x3A	; 58
 902:	18 f0       	brcs	.+6      	; 0x90a <__ultoa_invert+0x7c>
 904:	49 5d       	subi	r20, 0xD9	; 217
 906:	31 fd       	sbrc	r19, 1
 908:	40 52       	subi	r20, 0x20	; 32
 90a:	41 93       	st	Z+, r20
 90c:	02 d0       	rcall	.+4      	; 0x912 <__ultoa_invert+0x84>
 90e:	a9 f7       	brne	.-22     	; 0x8fa <__ultoa_invert+0x6c>
 910:	ea cf       	rjmp	.-44     	; 0x8e6 <__ultoa_invert+0x58>
 912:	b4 e0       	ldi	r27, 0x04	; 4
 914:	a6 95       	lsr	r26
 916:	97 95       	ror	r25
 918:	87 95       	ror	r24
 91a:	77 95       	ror	r23
 91c:	67 95       	ror	r22
 91e:	ba 95       	dec	r27
 920:	c9 f7       	brne	.-14     	; 0x914 <__ultoa_invert+0x86>
 922:	00 97       	sbiw	r24, 0x00	; 0
 924:	61 05       	cpc	r22, r1
 926:	71 05       	cpc	r23, r1
 928:	08 95       	ret
 92a:	9b 01       	movw	r18, r22
 92c:	ac 01       	movw	r20, r24
 92e:	0a 2e       	mov	r0, r26
 930:	06 94       	lsr	r0
 932:	57 95       	ror	r21
 934:	47 95       	ror	r20
 936:	37 95       	ror	r19
 938:	27 95       	ror	r18
 93a:	ba 95       	dec	r27
 93c:	c9 f7       	brne	.-14     	; 0x930 <__ultoa_invert+0xa2>
 93e:	62 0f       	add	r22, r18
 940:	73 1f       	adc	r23, r19
 942:	84 1f       	adc	r24, r20
 944:	95 1f       	adc	r25, r21
 946:	a0 1d       	adc	r26, r0
 948:	08 95       	ret

0000094a <__prologue_saves__>:
 94a:	2f 92       	push	r2
 94c:	3f 92       	push	r3
 94e:	4f 92       	push	r4
 950:	5f 92       	push	r5
 952:	6f 92       	push	r6
 954:	7f 92       	push	r7
 956:	8f 92       	push	r8
 958:	9f 92       	push	r9
 95a:	af 92       	push	r10
 95c:	bf 92       	push	r11
 95e:	cf 92       	push	r12
 960:	df 92       	push	r13
 962:	ef 92       	push	r14
 964:	ff 92       	push	r15
 966:	0f 93       	push	r16
 968:	1f 93       	push	r17
 96a:	cf 93       	push	r28
 96c:	df 93       	push	r29
 96e:	cd b7       	in	r28, 0x3d	; 61
 970:	de b7       	in	r29, 0x3e	; 62
 972:	ca 1b       	sub	r28, r26
 974:	db 0b       	sbc	r29, r27
 976:	0f b6       	in	r0, 0x3f	; 63
 978:	f8 94       	cli
 97a:	de bf       	out	0x3e, r29	; 62
 97c:	0f be       	out	0x3f, r0	; 63
 97e:	cd bf       	out	0x3d, r28	; 61
 980:	09 94       	ijmp

00000982 <__epilogue_restores__>:
 982:	2a 88       	ldd	r2, Y+18	; 0x12
 984:	39 88       	ldd	r3, Y+17	; 0x11
 986:	48 88       	ldd	r4, Y+16	; 0x10
 988:	5f 84       	ldd	r5, Y+15	; 0x0f
 98a:	6e 84       	ldd	r6, Y+14	; 0x0e
 98c:	7d 84       	ldd	r7, Y+13	; 0x0d
 98e:	8c 84       	ldd	r8, Y+12	; 0x0c
 990:	9b 84       	ldd	r9, Y+11	; 0x0b
 992:	aa 84       	ldd	r10, Y+10	; 0x0a
 994:	b9 84       	ldd	r11, Y+9	; 0x09
 996:	c8 84       	ldd	r12, Y+8	; 0x08
 998:	df 80       	ldd	r13, Y+7	; 0x07
 99a:	ee 80       	ldd	r14, Y+6	; 0x06
 99c:	fd 80       	ldd	r15, Y+5	; 0x05
 99e:	0c 81       	ldd	r16, Y+4	; 0x04
 9a0:	1b 81       	ldd	r17, Y+3	; 0x03
 9a2:	aa 81       	ldd	r26, Y+2	; 0x02
 9a4:	b9 81       	ldd	r27, Y+1	; 0x01
 9a6:	ce 0f       	add	r28, r30
 9a8:	d1 1d       	adc	r29, r1
 9aa:	0f b6       	in	r0, 0x3f	; 63
 9ac:	f8 94       	cli
 9ae:	de bf       	out	0x3e, r29	; 62
 9b0:	0f be       	out	0x3f, r0	; 63
 9b2:	cd bf       	out	0x3d, r28	; 61
 9b4:	ed 01       	movw	r28, r26
 9b6:	08 95       	ret

000009b8 <_exit>:
 9b8:	f8 94       	cli

000009ba <__stop_program>:
 9ba:	ff cf       	rjmp	.-2      	; 0x9ba <__stop_program>
