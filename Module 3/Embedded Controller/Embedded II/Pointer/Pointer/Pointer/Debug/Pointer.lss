
Pointer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000027c  00800100  00000816  000008aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000816  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080037c  0080037c  00000b26  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b26  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b84  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d0d  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008dd  00000000  00000000  00001975  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000558  00000000  00000000  00002252  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000194  00000000  00000000  000027ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d0  00000000  00000000  00002940  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000587  00000000  00000000  00002e10  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00003397  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	13 e0       	ldi	r17, 0x03	; 3
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e1       	ldi	r30, 0x16	; 22
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 37       	cpi	r26, 0x7C	; 124
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	23 e0       	ldi	r18, 0x03	; 3
  8c:	ac e7       	ldi	r26, 0x7C	; 124
  8e:	b3 e0       	ldi	r27, 0x03	; 3
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 38       	cpi	r26, 0x82	; 130
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <main>
  9e:	0c 94 09 04 	jmp	0x812	; 0x812 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <clear>:
	printf("doStuff:\nX = %d, Y = %d, Z = %d\n\n",punkt1.X, punkt1.Y, punkt1.Z);

	ptrDoStuff(&punkt1);
	printf("ptrDoStuff:\nX = %d, Y = %d, Z = %d\n\n",punkt1.X, punkt1.Y, punkt1.Z);
	
}
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	c0 e0       	ldi	r28, 0x00	; 0
  ac:	d0 e0       	ldi	r29, 0x00	; 0
  ae:	05 c0       	rjmp	.+10     	; 0xba <clear+0x14>
  b0:	8a e0       	ldi	r24, 0x0A	; 10
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 3a 01 	call	0x274	; 0x274 <putchar>
  b8:	21 96       	adiw	r28, 0x01	; 1
  ba:	c4 31       	cpi	r28, 0x14	; 20
  bc:	d1 05       	cpc	r29, r1
  be:	c4 f3       	brlt	.-16     	; 0xb0 <clear+0xa>
  c0:	df 91       	pop	r29
  c2:	cf 91       	pop	r28
  c4:	08 95       	ret

000000c6 <opgave4>:

opgave4()
{
  c6:	ef 92       	push	r14
  c8:	ff 92       	push	r15
  ca:	0f 93       	push	r16
  cc:	1f 93       	push	r17
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	cd b7       	in	r28, 0x3d	; 61
  d4:	de b7       	in	r29, 0x3e	; 62
  d6:	6b 97       	sbiw	r28, 0x1b	; 27
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	f8 94       	cli
  dc:	de bf       	out	0x3e, r29	; 62
  de:	0f be       	out	0x3f, r0	; 63
  e0:	cd bf       	out	0x3d, r28	; 61
	char cData[] = {"Pointers are easy as"};
  e2:	85 e1       	ldi	r24, 0x15	; 21
  e4:	e6 e6       	ldi	r30, 0x66	; 102
  e6:	f3 e0       	ldi	r31, 0x03	; 3
  e8:	de 01       	movw	r26, r28
  ea:	11 96       	adiw	r26, 0x01	; 1
  ec:	01 90       	ld	r0, Z+
  ee:	0d 92       	st	X+, r0
  f0:	8a 95       	dec	r24
  f2:	e1 f7       	brne	.-8      	; 0xec <opgave4+0x26>
	char *pcData = NULL;

	int iData[] = {1,2,3};
  f4:	86 e0       	ldi	r24, 0x06	; 6
  f6:	ee e0       	ldi	r30, 0x0E	; 14
  f8:	f1 e0       	ldi	r31, 0x01	; 1
  fa:	de 01       	movw	r26, r28
  fc:	56 96       	adiw	r26, 0x16	; 22
  fe:	01 90       	ld	r0, Z+
 100:	0d 92       	st	X+, r0
 102:	8a 95       	dec	r24
 104:	e1 f7       	brne	.-8      	; 0xfe <opgave4+0x38>
	int *piData = NULL;
	
	printf("cData har %d bytesize elementer\n", sizeof(cData));
 106:	1f 92       	push	r1
 108:	85 e1       	ldi	r24, 0x15	; 21
 10a:	8f 93       	push	r24
 10c:	8e ed       	ldi	r24, 0xDE	; 222
 10e:	92 e0       	ldi	r25, 0x02	; 2
 110:	9f 93       	push	r25
 112:	8f 93       	push	r24
 114:	0e 94 24 01 	call	0x248	; 0x248 <printf>
	printf("iData har %d bytesize elementer\n", sizeof(iData));
 118:	1f 92       	push	r1
 11a:	86 e0       	ldi	r24, 0x06	; 6
 11c:	8f 93       	push	r24
 11e:	8f ef       	ldi	r24, 0xFF	; 255
 120:	92 e0       	ldi	r25, 0x02	; 2
 122:	9f 93       	push	r25
 124:	8f 93       	push	r24
 126:	0e 94 24 01 	call	0x248	; 0x248 <printf>
	
	//cData uden [] indeholder adressen på første element i arrayet.
	pcData = cData;
	
	//Forløkke ud fra størrelsen på char cData
	for(int i = 0; i < sizeof(cData); i++)
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	f8 94       	cli
 12e:	de bf       	out	0x3e, r29	; 62
 130:	0f be       	out	0x3f, r0	; 63
 132:	cd bf       	out	0x3d, r28	; 61
 134:	00 e0       	ldi	r16, 0x00	; 0
 136:	10 e0       	ldi	r17, 0x00	; 0
	
	printf("cData har %d bytesize elementer\n", sizeof(cData));
	printf("iData har %d bytesize elementer\n", sizeof(iData));
	
	//cData uden [] indeholder adressen på første element i arrayet.
	pcData = cData;
 138:	fe 01       	movw	r30, r28
 13a:	31 96       	adiw	r30, 0x01	; 1
	
	//Forløkke ud fra størrelsen på char cData
	for(int i = 0; i < sizeof(cData); i++)
 13c:	21 c0       	rjmp	.+66     	; 0x180 <opgave4+0xba>
	{
		printf("&cData[%d] = 0x%x, cData[%d] = %c\n", i, &cData[i],  i, *pcData++);
 13e:	7f 01       	movw	r14, r30
 140:	3f ef       	ldi	r19, 0xFF	; 255
 142:	e3 1a       	sub	r14, r19
 144:	f3 0a       	sbc	r15, r19
 146:	80 81       	ld	r24, Z
 148:	1f 92       	push	r1
 14a:	8f 93       	push	r24
 14c:	1f 93       	push	r17
 14e:	0f 93       	push	r16
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	8c 0f       	add	r24, r28
 156:	9d 1f       	adc	r25, r29
 158:	80 0f       	add	r24, r16
 15a:	91 1f       	adc	r25, r17
 15c:	9f 93       	push	r25
 15e:	8f 93       	push	r24
 160:	1f 93       	push	r17
 162:	0f 93       	push	r16
 164:	80 e2       	ldi	r24, 0x20	; 32
 166:	93 e0       	ldi	r25, 0x03	; 3
 168:	9f 93       	push	r25
 16a:	8f 93       	push	r24
 16c:	0e 94 24 01 	call	0x248	; 0x248 <printf>
	
	//cData uden [] indeholder adressen på første element i arrayet.
	pcData = cData;
	
	//Forløkke ud fra størrelsen på char cData
	for(int i = 0; i < sizeof(cData); i++)
 170:	0f 5f       	subi	r16, 0xFF	; 255
 172:	1f 4f       	sbci	r17, 0xFF	; 255
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	f8 94       	cli
 178:	de bf       	out	0x3e, r29	; 62
 17a:	0f be       	out	0x3f, r0	; 63
 17c:	cd bf       	out	0x3d, r28	; 61
	{
		printf("&cData[%d] = 0x%x, cData[%d] = %c\n", i, &cData[i],  i, *pcData++);
 17e:	f7 01       	movw	r30, r14
	
	//cData uden [] indeholder adressen på første element i arrayet.
	pcData = cData;
	
	//Forløkke ud fra størrelsen på char cData
	for(int i = 0; i < sizeof(cData); i++)
 180:	05 31       	cpi	r16, 0x15	; 21
 182:	11 05       	cpc	r17, r1
 184:	e0 f2       	brcs	.-72     	; 0x13e <opgave4+0x78>
 186:	00 e0       	ldi	r16, 0x00	; 0
 188:	10 e0       	ldi	r17, 0x00	; 0
 18a:	fe 01       	movw	r30, r28
 18c:	76 96       	adiw	r30, 0x16	; 22
 18e:	25 c0       	rjmp	.+74     	; 0x1da <opgave4+0x114>
	int *ip = iData;

	//forløkke, af int array
	for(int i = 0; i < sizeof(iData) / sizeof(int); i++)
	{
		piData = &iData[i];
 190:	c8 01       	movw	r24, r16
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	26 e1       	ldi	r18, 0x16	; 22
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	2c 0f       	add	r18, r28
 19c:	3d 1f       	adc	r19, r29
 19e:	82 0f       	add	r24, r18
 1a0:	93 1f       	adc	r25, r19
		printf("&iData[%d] = 0x%x, iData[%d] = %d\n", i, piData,  i, *ip++);
 1a2:	7f 01       	movw	r14, r30
 1a4:	32 e0       	ldi	r19, 0x02	; 2
 1a6:	e3 0e       	add	r14, r19
 1a8:	f1 1c       	adc	r15, r1
 1aa:	21 81       	ldd	r18, Z+1	; 0x01
 1ac:	2f 93       	push	r18
 1ae:	20 81       	ld	r18, Z
 1b0:	2f 93       	push	r18
 1b2:	1f 93       	push	r17
 1b4:	0f 93       	push	r16
 1b6:	9f 93       	push	r25
 1b8:	8f 93       	push	r24
 1ba:	1f 93       	push	r17
 1bc:	0f 93       	push	r16
 1be:	83 e4       	ldi	r24, 0x43	; 67
 1c0:	93 e0       	ldi	r25, 0x03	; 3
 1c2:	9f 93       	push	r25
 1c4:	8f 93       	push	r24
 1c6:	0e 94 24 01 	call	0x248	; 0x248 <printf>

	// pointer til test af int arrayet
	int *ip = iData;

	//forløkke, af int array
	for(int i = 0; i < sizeof(iData) / sizeof(int); i++)
 1ca:	0f 5f       	subi	r16, 0xFF	; 255
 1cc:	1f 4f       	sbci	r17, 0xFF	; 255
 1ce:	0f b6       	in	r0, 0x3f	; 63
 1d0:	f8 94       	cli
 1d2:	de bf       	out	0x3e, r29	; 62
 1d4:	0f be       	out	0x3f, r0	; 63
 1d6:	cd bf       	out	0x3d, r28	; 61
	{
		piData = &iData[i];
		printf("&iData[%d] = 0x%x, iData[%d] = %d\n", i, piData,  i, *ip++);
 1d8:	f7 01       	movw	r30, r14

	// pointer til test af int arrayet
	int *ip = iData;

	//forløkke, af int array
	for(int i = 0; i < sizeof(iData) / sizeof(int); i++)
 1da:	03 30       	cpi	r16, 0x03	; 3
 1dc:	11 05       	cpc	r17, r1
 1de:	c0 f2       	brcs	.-80     	; 0x190 <opgave4+0xca>
	{
		piData = &iData[i];
		printf("&iData[%d] = 0x%x, iData[%d] = %d\n", i, piData,  i, *ip++);
	}
 1e0:	6b 96       	adiw	r28, 0x1b	; 27
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	f8 94       	cli
 1e6:	de bf       	out	0x3e, r29	; 62
 1e8:	0f be       	out	0x3f, r0	; 63
 1ea:	cd bf       	out	0x3d, r28	; 61
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	1f 91       	pop	r17
 1f2:	0f 91       	pop	r16
 1f4:	ff 90       	pop	r15
 1f6:	ef 90       	pop	r14
 1f8:	08 95       	ret

000001fa <main>:

int main(void)
{

	
	RS232Init();    // Init UART
 1fa:	0e 94 14 01 	call	0x228	; 0x228 <RS232Init>
	clear();		// Clear hercules log
 1fe:	0e 94 53 00 	call	0xa6	; 0xa6 <clear>
	
	opgave4();
 202:	0e 94 63 00 	call	0xc6	; 0xc6 <opgave4>
 206:	ff cf       	rjmp	.-2      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>

00000208 <uart_putch>:
	return( UDR0);
}

int uart_putch(char ch, FILE* stream)
{
	while( !(UCSR0A & (1<<UDRE0))) ;
 208:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
 20c:	95 ff       	sbrs	r25, 5
 20e:	fc cf       	rjmp	.-8      	; 0x208 <uart_putch>
	UDR0 = ch;
 210:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	return 0;
}
 214:	80 e0       	ldi	r24, 0x00	; 0
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	08 95       	ret

0000021a <SetupOutputStreamToUart>:
	SetupOutputStreamToUart();
}

void SetupOutputStreamToUart(void)
{
	stdout = &uart_output;
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	91 e0       	ldi	r25, 0x01	; 1
 21e:	90 93 7f 03 	sts	0x037F, r25	; 0x80037f <__data_end+0x3>
 222:	80 93 7e 03 	sts	0x037E, r24	; 0x80037e <__data_end+0x2>
 226:	08 95       	ret

00000228 <RS232Init>:


void RS232Init( void)
{
	// Set baud rate
	UBRR0L = (unsigned char)(MyUBRR & 0xff);
 228:	87 e6       	ldi	r24, 0x67	; 103
 22a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	UBRR0H = (unsigned char)(MyUBRR>>8);
 22e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
#ifdef UART_NORMAL_MODE	
	UCSR0A = 0x00;
 232:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
#else
	UCSR0A = 1<<U2X0; // Set *2 mode
#endif
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);  //0x18 , enable receive and transmit
 236:	88 e1       	ldi	r24, 0x18	; 24
 238:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
	UCSR0C =  (1<<UCSZ01) | (1<<UCSZ00); // 8 data bit 1 stop bit
 23c:	86 e0       	ldi	r24, 0x06	; 6
 23e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
	//stdout = &uart_output;
	//stdin = &uart_input;
	SetupOutputStreamToUart();
 242:	0e 94 0d 01 	call	0x21a	; 0x21a <SetupOutputStreamToUart>
 246:	08 95       	ret

00000248 <printf>:
 248:	a0 e0       	ldi	r26, 0x00	; 0
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	ea e2       	ldi	r30, 0x2A	; 42
 24e:	f1 e0       	ldi	r31, 0x01	; 1
 250:	0c 94 e2 03 	jmp	0x7c4	; 0x7c4 <__prologue_saves__+0x20>
 254:	ae 01       	movw	r20, r28
 256:	4b 5f       	subi	r20, 0xFB	; 251
 258:	5f 4f       	sbci	r21, 0xFF	; 255
 25a:	fa 01       	movw	r30, r20
 25c:	61 91       	ld	r22, Z+
 25e:	71 91       	ld	r23, Z+
 260:	af 01       	movw	r20, r30
 262:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end+0x2>
 266:	90 91 7f 03 	lds	r25, 0x037F	; 0x80037f <__data_end+0x3>
 26a:	0e 94 41 01 	call	0x282	; 0x282 <vfprintf>
 26e:	e2 e0       	ldi	r30, 0x02	; 2
 270:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__epilogue_restores__+0x20>

00000274 <putchar>:
 274:	60 91 7e 03 	lds	r22, 0x037E	; 0x80037e <__data_end+0x2>
 278:	70 91 7f 03 	lds	r23, 0x037F	; 0x80037f <__data_end+0x3>
 27c:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 280:	08 95       	ret

00000282 <vfprintf>:
 282:	ab e0       	ldi	r26, 0x0B	; 11
 284:	b0 e0       	ldi	r27, 0x00	; 0
 286:	e7 e4       	ldi	r30, 0x47	; 71
 288:	f1 e0       	ldi	r31, 0x01	; 1
 28a:	0c 94 d2 03 	jmp	0x7a4	; 0x7a4 <__prologue_saves__>
 28e:	6c 01       	movw	r12, r24
 290:	7b 01       	movw	r14, r22
 292:	8a 01       	movw	r16, r20
 294:	fc 01       	movw	r30, r24
 296:	17 82       	std	Z+7, r1	; 0x07
 298:	16 82       	std	Z+6, r1	; 0x06
 29a:	83 81       	ldd	r24, Z+3	; 0x03
 29c:	81 ff       	sbrs	r24, 1
 29e:	cc c1       	rjmp	.+920    	; 0x638 <__stack+0x139>
 2a0:	ce 01       	movw	r24, r28
 2a2:	01 96       	adiw	r24, 0x01	; 1
 2a4:	3c 01       	movw	r6, r24
 2a6:	f6 01       	movw	r30, r12
 2a8:	93 81       	ldd	r25, Z+3	; 0x03
 2aa:	f7 01       	movw	r30, r14
 2ac:	93 fd       	sbrc	r25, 3
 2ae:	85 91       	lpm	r24, Z+
 2b0:	93 ff       	sbrs	r25, 3
 2b2:	81 91       	ld	r24, Z+
 2b4:	7f 01       	movw	r14, r30
 2b6:	88 23       	and	r24, r24
 2b8:	09 f4       	brne	.+2      	; 0x2bc <vfprintf+0x3a>
 2ba:	ba c1       	rjmp	.+884    	; 0x630 <__stack+0x131>
 2bc:	85 32       	cpi	r24, 0x25	; 37
 2be:	39 f4       	brne	.+14     	; 0x2ce <vfprintf+0x4c>
 2c0:	93 fd       	sbrc	r25, 3
 2c2:	85 91       	lpm	r24, Z+
 2c4:	93 ff       	sbrs	r25, 3
 2c6:	81 91       	ld	r24, Z+
 2c8:	7f 01       	movw	r14, r30
 2ca:	85 32       	cpi	r24, 0x25	; 37
 2cc:	29 f4       	brne	.+10     	; 0x2d8 <vfprintf+0x56>
 2ce:	b6 01       	movw	r22, r12
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 2d6:	e7 cf       	rjmp	.-50     	; 0x2a6 <vfprintf+0x24>
 2d8:	91 2c       	mov	r9, r1
 2da:	21 2c       	mov	r2, r1
 2dc:	31 2c       	mov	r3, r1
 2de:	ff e1       	ldi	r31, 0x1F	; 31
 2e0:	f3 15       	cp	r31, r3
 2e2:	d8 f0       	brcs	.+54     	; 0x31a <vfprintf+0x98>
 2e4:	8b 32       	cpi	r24, 0x2B	; 43
 2e6:	79 f0       	breq	.+30     	; 0x306 <vfprintf+0x84>
 2e8:	38 f4       	brcc	.+14     	; 0x2f8 <vfprintf+0x76>
 2ea:	80 32       	cpi	r24, 0x20	; 32
 2ec:	79 f0       	breq	.+30     	; 0x30c <vfprintf+0x8a>
 2ee:	83 32       	cpi	r24, 0x23	; 35
 2f0:	a1 f4       	brne	.+40     	; 0x31a <vfprintf+0x98>
 2f2:	23 2d       	mov	r18, r3
 2f4:	20 61       	ori	r18, 0x10	; 16
 2f6:	1d c0       	rjmp	.+58     	; 0x332 <vfprintf+0xb0>
 2f8:	8d 32       	cpi	r24, 0x2D	; 45
 2fa:	61 f0       	breq	.+24     	; 0x314 <vfprintf+0x92>
 2fc:	80 33       	cpi	r24, 0x30	; 48
 2fe:	69 f4       	brne	.+26     	; 0x31a <vfprintf+0x98>
 300:	23 2d       	mov	r18, r3
 302:	21 60       	ori	r18, 0x01	; 1
 304:	16 c0       	rjmp	.+44     	; 0x332 <vfprintf+0xb0>
 306:	83 2d       	mov	r24, r3
 308:	82 60       	ori	r24, 0x02	; 2
 30a:	38 2e       	mov	r3, r24
 30c:	e3 2d       	mov	r30, r3
 30e:	e4 60       	ori	r30, 0x04	; 4
 310:	3e 2e       	mov	r3, r30
 312:	2a c0       	rjmp	.+84     	; 0x368 <vfprintf+0xe6>
 314:	f3 2d       	mov	r31, r3
 316:	f8 60       	ori	r31, 0x08	; 8
 318:	1d c0       	rjmp	.+58     	; 0x354 <vfprintf+0xd2>
 31a:	37 fc       	sbrc	r3, 7
 31c:	2d c0       	rjmp	.+90     	; 0x378 <vfprintf+0xf6>
 31e:	20 ed       	ldi	r18, 0xD0	; 208
 320:	28 0f       	add	r18, r24
 322:	2a 30       	cpi	r18, 0x0A	; 10
 324:	40 f0       	brcs	.+16     	; 0x336 <vfprintf+0xb4>
 326:	8e 32       	cpi	r24, 0x2E	; 46
 328:	b9 f4       	brne	.+46     	; 0x358 <vfprintf+0xd6>
 32a:	36 fc       	sbrc	r3, 6
 32c:	81 c1       	rjmp	.+770    	; 0x630 <__stack+0x131>
 32e:	23 2d       	mov	r18, r3
 330:	20 64       	ori	r18, 0x40	; 64
 332:	32 2e       	mov	r3, r18
 334:	19 c0       	rjmp	.+50     	; 0x368 <vfprintf+0xe6>
 336:	36 fe       	sbrs	r3, 6
 338:	06 c0       	rjmp	.+12     	; 0x346 <vfprintf+0xc4>
 33a:	8a e0       	ldi	r24, 0x0A	; 10
 33c:	98 9e       	mul	r9, r24
 33e:	20 0d       	add	r18, r0
 340:	11 24       	eor	r1, r1
 342:	92 2e       	mov	r9, r18
 344:	11 c0       	rjmp	.+34     	; 0x368 <vfprintf+0xe6>
 346:	ea e0       	ldi	r30, 0x0A	; 10
 348:	2e 9e       	mul	r2, r30
 34a:	20 0d       	add	r18, r0
 34c:	11 24       	eor	r1, r1
 34e:	22 2e       	mov	r2, r18
 350:	f3 2d       	mov	r31, r3
 352:	f0 62       	ori	r31, 0x20	; 32
 354:	3f 2e       	mov	r3, r31
 356:	08 c0       	rjmp	.+16     	; 0x368 <vfprintf+0xe6>
 358:	8c 36       	cpi	r24, 0x6C	; 108
 35a:	21 f4       	brne	.+8      	; 0x364 <vfprintf+0xe2>
 35c:	83 2d       	mov	r24, r3
 35e:	80 68       	ori	r24, 0x80	; 128
 360:	38 2e       	mov	r3, r24
 362:	02 c0       	rjmp	.+4      	; 0x368 <vfprintf+0xe6>
 364:	88 36       	cpi	r24, 0x68	; 104
 366:	41 f4       	brne	.+16     	; 0x378 <vfprintf+0xf6>
 368:	f7 01       	movw	r30, r14
 36a:	93 fd       	sbrc	r25, 3
 36c:	85 91       	lpm	r24, Z+
 36e:	93 ff       	sbrs	r25, 3
 370:	81 91       	ld	r24, Z+
 372:	7f 01       	movw	r14, r30
 374:	81 11       	cpse	r24, r1
 376:	b3 cf       	rjmp	.-154    	; 0x2de <vfprintf+0x5c>
 378:	98 2f       	mov	r25, r24
 37a:	9f 7d       	andi	r25, 0xDF	; 223
 37c:	95 54       	subi	r25, 0x45	; 69
 37e:	93 30       	cpi	r25, 0x03	; 3
 380:	28 f4       	brcc	.+10     	; 0x38c <vfprintf+0x10a>
 382:	0c 5f       	subi	r16, 0xFC	; 252
 384:	1f 4f       	sbci	r17, 0xFF	; 255
 386:	9f e3       	ldi	r25, 0x3F	; 63
 388:	99 83       	std	Y+1, r25	; 0x01
 38a:	0d c0       	rjmp	.+26     	; 0x3a6 <vfprintf+0x124>
 38c:	83 36       	cpi	r24, 0x63	; 99
 38e:	31 f0       	breq	.+12     	; 0x39c <vfprintf+0x11a>
 390:	83 37       	cpi	r24, 0x73	; 115
 392:	71 f0       	breq	.+28     	; 0x3b0 <vfprintf+0x12e>
 394:	83 35       	cpi	r24, 0x53	; 83
 396:	09 f0       	breq	.+2      	; 0x39a <vfprintf+0x118>
 398:	59 c0       	rjmp	.+178    	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 39a:	21 c0       	rjmp	.+66     	; 0x3de <vfprintf+0x15c>
 39c:	f8 01       	movw	r30, r16
 39e:	80 81       	ld	r24, Z
 3a0:	89 83       	std	Y+1, r24	; 0x01
 3a2:	0e 5f       	subi	r16, 0xFE	; 254
 3a4:	1f 4f       	sbci	r17, 0xFF	; 255
 3a6:	88 24       	eor	r8, r8
 3a8:	83 94       	inc	r8
 3aa:	91 2c       	mov	r9, r1
 3ac:	53 01       	movw	r10, r6
 3ae:	13 c0       	rjmp	.+38     	; 0x3d6 <vfprintf+0x154>
 3b0:	28 01       	movw	r4, r16
 3b2:	f2 e0       	ldi	r31, 0x02	; 2
 3b4:	4f 0e       	add	r4, r31
 3b6:	51 1c       	adc	r5, r1
 3b8:	f8 01       	movw	r30, r16
 3ba:	a0 80       	ld	r10, Z
 3bc:	b1 80       	ldd	r11, Z+1	; 0x01
 3be:	36 fe       	sbrs	r3, 6
 3c0:	03 c0       	rjmp	.+6      	; 0x3c8 <vfprintf+0x146>
 3c2:	69 2d       	mov	r22, r9
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <vfprintf+0x14a>
 3c8:	6f ef       	ldi	r22, 0xFF	; 255
 3ca:	7f ef       	ldi	r23, 0xFF	; 255
 3cc:	c5 01       	movw	r24, r10
 3ce:	0e 94 2d 03 	call	0x65a	; 0x65a <strnlen>
 3d2:	4c 01       	movw	r8, r24
 3d4:	82 01       	movw	r16, r4
 3d6:	f3 2d       	mov	r31, r3
 3d8:	ff 77       	andi	r31, 0x7F	; 127
 3da:	3f 2e       	mov	r3, r31
 3dc:	16 c0       	rjmp	.+44     	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 3de:	28 01       	movw	r4, r16
 3e0:	22 e0       	ldi	r18, 0x02	; 2
 3e2:	42 0e       	add	r4, r18
 3e4:	51 1c       	adc	r5, r1
 3e6:	f8 01       	movw	r30, r16
 3e8:	a0 80       	ld	r10, Z
 3ea:	b1 80       	ldd	r11, Z+1	; 0x01
 3ec:	36 fe       	sbrs	r3, 6
 3ee:	03 c0       	rjmp	.+6      	; 0x3f6 <vfprintf+0x174>
 3f0:	69 2d       	mov	r22, r9
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <vfprintf+0x178>
 3f6:	6f ef       	ldi	r22, 0xFF	; 255
 3f8:	7f ef       	ldi	r23, 0xFF	; 255
 3fa:	c5 01       	movw	r24, r10
 3fc:	0e 94 22 03 	call	0x644	; 0x644 <strnlen_P>
 400:	4c 01       	movw	r8, r24
 402:	f3 2d       	mov	r31, r3
 404:	f0 68       	ori	r31, 0x80	; 128
 406:	3f 2e       	mov	r3, r31
 408:	82 01       	movw	r16, r4
 40a:	33 fc       	sbrc	r3, 3
 40c:	1b c0       	rjmp	.+54     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 40e:	82 2d       	mov	r24, r2
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	88 16       	cp	r8, r24
 414:	99 06       	cpc	r9, r25
 416:	b0 f4       	brcc	.+44     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 418:	b6 01       	movw	r22, r12
 41a:	80 e2       	ldi	r24, 0x20	; 32
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 422:	2a 94       	dec	r2
 424:	f4 cf       	rjmp	.-24     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 426:	f5 01       	movw	r30, r10
 428:	37 fc       	sbrc	r3, 7
 42a:	85 91       	lpm	r24, Z+
 42c:	37 fe       	sbrs	r3, 7
 42e:	81 91       	ld	r24, Z+
 430:	5f 01       	movw	r10, r30
 432:	b6 01       	movw	r22, r12
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 43a:	21 10       	cpse	r2, r1
 43c:	2a 94       	dec	r2
 43e:	21 e0       	ldi	r18, 0x01	; 1
 440:	82 1a       	sub	r8, r18
 442:	91 08       	sbc	r9, r1
 444:	81 14       	cp	r8, r1
 446:	91 04       	cpc	r9, r1
 448:	71 f7       	brne	.-36     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 44a:	e8 c0       	rjmp	.+464    	; 0x61c <__stack+0x11d>
 44c:	84 36       	cpi	r24, 0x64	; 100
 44e:	11 f0       	breq	.+4      	; 0x454 <__DATA_REGION_LENGTH__+0x54>
 450:	89 36       	cpi	r24, 0x69	; 105
 452:	41 f5       	brne	.+80     	; 0x4a4 <__DATA_REGION_LENGTH__+0xa4>
 454:	f8 01       	movw	r30, r16
 456:	37 fe       	sbrs	r3, 7
 458:	07 c0       	rjmp	.+14     	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 45a:	60 81       	ld	r22, Z
 45c:	71 81       	ldd	r23, Z+1	; 0x01
 45e:	82 81       	ldd	r24, Z+2	; 0x02
 460:	93 81       	ldd	r25, Z+3	; 0x03
 462:	0c 5f       	subi	r16, 0xFC	; 252
 464:	1f 4f       	sbci	r17, 0xFF	; 255
 466:	08 c0       	rjmp	.+16     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 468:	60 81       	ld	r22, Z
 46a:	71 81       	ldd	r23, Z+1	; 0x01
 46c:	07 2e       	mov	r0, r23
 46e:	00 0c       	add	r0, r0
 470:	88 0b       	sbc	r24, r24
 472:	99 0b       	sbc	r25, r25
 474:	0e 5f       	subi	r16, 0xFE	; 254
 476:	1f 4f       	sbci	r17, 0xFF	; 255
 478:	f3 2d       	mov	r31, r3
 47a:	ff 76       	andi	r31, 0x6F	; 111
 47c:	3f 2e       	mov	r3, r31
 47e:	97 ff       	sbrs	r25, 7
 480:	09 c0       	rjmp	.+18     	; 0x494 <__DATA_REGION_LENGTH__+0x94>
 482:	90 95       	com	r25
 484:	80 95       	com	r24
 486:	70 95       	com	r23
 488:	61 95       	neg	r22
 48a:	7f 4f       	sbci	r23, 0xFF	; 255
 48c:	8f 4f       	sbci	r24, 0xFF	; 255
 48e:	9f 4f       	sbci	r25, 0xFF	; 255
 490:	f0 68       	ori	r31, 0x80	; 128
 492:	3f 2e       	mov	r3, r31
 494:	2a e0       	ldi	r18, 0x0A	; 10
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	a3 01       	movw	r20, r6
 49a:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__ultoa_invert>
 49e:	88 2e       	mov	r8, r24
 4a0:	86 18       	sub	r8, r6
 4a2:	45 c0       	rjmp	.+138    	; 0x52e <__stack+0x2f>
 4a4:	85 37       	cpi	r24, 0x75	; 117
 4a6:	31 f4       	brne	.+12     	; 0x4b4 <__DATA_REGION_LENGTH__+0xb4>
 4a8:	23 2d       	mov	r18, r3
 4aa:	2f 7e       	andi	r18, 0xEF	; 239
 4ac:	b2 2e       	mov	r11, r18
 4ae:	2a e0       	ldi	r18, 0x0A	; 10
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	25 c0       	rjmp	.+74     	; 0x4fe <__DATA_REGION_LENGTH__+0xfe>
 4b4:	93 2d       	mov	r25, r3
 4b6:	99 7f       	andi	r25, 0xF9	; 249
 4b8:	b9 2e       	mov	r11, r25
 4ba:	8f 36       	cpi	r24, 0x6F	; 111
 4bc:	c1 f0       	breq	.+48     	; 0x4ee <__DATA_REGION_LENGTH__+0xee>
 4be:	18 f4       	brcc	.+6      	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 4c0:	88 35       	cpi	r24, 0x58	; 88
 4c2:	79 f0       	breq	.+30     	; 0x4e2 <__DATA_REGION_LENGTH__+0xe2>
 4c4:	b5 c0       	rjmp	.+362    	; 0x630 <__stack+0x131>
 4c6:	80 37       	cpi	r24, 0x70	; 112
 4c8:	19 f0       	breq	.+6      	; 0x4d0 <__DATA_REGION_LENGTH__+0xd0>
 4ca:	88 37       	cpi	r24, 0x78	; 120
 4cc:	21 f0       	breq	.+8      	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 4ce:	b0 c0       	rjmp	.+352    	; 0x630 <__stack+0x131>
 4d0:	e9 2f       	mov	r30, r25
 4d2:	e0 61       	ori	r30, 0x10	; 16
 4d4:	be 2e       	mov	r11, r30
 4d6:	b4 fe       	sbrs	r11, 4
 4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <__DATA_REGION_LENGTH__+0xf4>
 4da:	fb 2d       	mov	r31, r11
 4dc:	f4 60       	ori	r31, 0x04	; 4
 4de:	bf 2e       	mov	r11, r31
 4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <__DATA_REGION_LENGTH__+0xf4>
 4e2:	34 fe       	sbrs	r3, 4
 4e4:	0a c0       	rjmp	.+20     	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
 4e6:	29 2f       	mov	r18, r25
 4e8:	26 60       	ori	r18, 0x06	; 6
 4ea:	b2 2e       	mov	r11, r18
 4ec:	06 c0       	rjmp	.+12     	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
 4ee:	28 e0       	ldi	r18, 0x08	; 8
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	05 c0       	rjmp	.+10     	; 0x4fe <__DATA_REGION_LENGTH__+0xfe>
 4f4:	20 e1       	ldi	r18, 0x10	; 16
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <__DATA_REGION_LENGTH__+0xfe>
 4fa:	20 e1       	ldi	r18, 0x10	; 16
 4fc:	32 e0       	ldi	r19, 0x02	; 2
 4fe:	f8 01       	movw	r30, r16
 500:	b7 fe       	sbrs	r11, 7
 502:	07 c0       	rjmp	.+14     	; 0x512 <__stack+0x13>
 504:	60 81       	ld	r22, Z
 506:	71 81       	ldd	r23, Z+1	; 0x01
 508:	82 81       	ldd	r24, Z+2	; 0x02
 50a:	93 81       	ldd	r25, Z+3	; 0x03
 50c:	0c 5f       	subi	r16, 0xFC	; 252
 50e:	1f 4f       	sbci	r17, 0xFF	; 255
 510:	06 c0       	rjmp	.+12     	; 0x51e <__stack+0x1f>
 512:	60 81       	ld	r22, Z
 514:	71 81       	ldd	r23, Z+1	; 0x01
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	0e 5f       	subi	r16, 0xFE	; 254
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	a3 01       	movw	r20, r6
 520:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__ultoa_invert>
 524:	88 2e       	mov	r8, r24
 526:	86 18       	sub	r8, r6
 528:	fb 2d       	mov	r31, r11
 52a:	ff 77       	andi	r31, 0x7F	; 127
 52c:	3f 2e       	mov	r3, r31
 52e:	36 fe       	sbrs	r3, 6
 530:	0d c0       	rjmp	.+26     	; 0x54c <__stack+0x4d>
 532:	23 2d       	mov	r18, r3
 534:	2e 7f       	andi	r18, 0xFE	; 254
 536:	a2 2e       	mov	r10, r18
 538:	89 14       	cp	r8, r9
 53a:	58 f4       	brcc	.+22     	; 0x552 <__stack+0x53>
 53c:	34 fe       	sbrs	r3, 4
 53e:	0b c0       	rjmp	.+22     	; 0x556 <__stack+0x57>
 540:	32 fc       	sbrc	r3, 2
 542:	09 c0       	rjmp	.+18     	; 0x556 <__stack+0x57>
 544:	83 2d       	mov	r24, r3
 546:	8e 7e       	andi	r24, 0xEE	; 238
 548:	a8 2e       	mov	r10, r24
 54a:	05 c0       	rjmp	.+10     	; 0x556 <__stack+0x57>
 54c:	b8 2c       	mov	r11, r8
 54e:	a3 2c       	mov	r10, r3
 550:	03 c0       	rjmp	.+6      	; 0x558 <__stack+0x59>
 552:	b8 2c       	mov	r11, r8
 554:	01 c0       	rjmp	.+2      	; 0x558 <__stack+0x59>
 556:	b9 2c       	mov	r11, r9
 558:	a4 fe       	sbrs	r10, 4
 55a:	0f c0       	rjmp	.+30     	; 0x57a <__stack+0x7b>
 55c:	fe 01       	movw	r30, r28
 55e:	e8 0d       	add	r30, r8
 560:	f1 1d       	adc	r31, r1
 562:	80 81       	ld	r24, Z
 564:	80 33       	cpi	r24, 0x30	; 48
 566:	21 f4       	brne	.+8      	; 0x570 <__stack+0x71>
 568:	9a 2d       	mov	r25, r10
 56a:	99 7e       	andi	r25, 0xE9	; 233
 56c:	a9 2e       	mov	r10, r25
 56e:	09 c0       	rjmp	.+18     	; 0x582 <__stack+0x83>
 570:	a2 fe       	sbrs	r10, 2
 572:	06 c0       	rjmp	.+12     	; 0x580 <__stack+0x81>
 574:	b3 94       	inc	r11
 576:	b3 94       	inc	r11
 578:	04 c0       	rjmp	.+8      	; 0x582 <__stack+0x83>
 57a:	8a 2d       	mov	r24, r10
 57c:	86 78       	andi	r24, 0x86	; 134
 57e:	09 f0       	breq	.+2      	; 0x582 <__stack+0x83>
 580:	b3 94       	inc	r11
 582:	a3 fc       	sbrc	r10, 3
 584:	11 c0       	rjmp	.+34     	; 0x5a8 <__stack+0xa9>
 586:	a0 fe       	sbrs	r10, 0
 588:	06 c0       	rjmp	.+12     	; 0x596 <__stack+0x97>
 58a:	b2 14       	cp	r11, r2
 58c:	88 f4       	brcc	.+34     	; 0x5b0 <__stack+0xb1>
 58e:	28 0c       	add	r2, r8
 590:	92 2c       	mov	r9, r2
 592:	9b 18       	sub	r9, r11
 594:	0e c0       	rjmp	.+28     	; 0x5b2 <__stack+0xb3>
 596:	b2 14       	cp	r11, r2
 598:	60 f4       	brcc	.+24     	; 0x5b2 <__stack+0xb3>
 59a:	b6 01       	movw	r22, r12
 59c:	80 e2       	ldi	r24, 0x20	; 32
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 5a4:	b3 94       	inc	r11
 5a6:	f7 cf       	rjmp	.-18     	; 0x596 <__stack+0x97>
 5a8:	b2 14       	cp	r11, r2
 5aa:	18 f4       	brcc	.+6      	; 0x5b2 <__stack+0xb3>
 5ac:	2b 18       	sub	r2, r11
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <__stack+0xb5>
 5b0:	98 2c       	mov	r9, r8
 5b2:	21 2c       	mov	r2, r1
 5b4:	a4 fe       	sbrs	r10, 4
 5b6:	10 c0       	rjmp	.+32     	; 0x5d8 <__stack+0xd9>
 5b8:	b6 01       	movw	r22, r12
 5ba:	80 e3       	ldi	r24, 0x30	; 48
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 5c2:	a2 fe       	sbrs	r10, 2
 5c4:	17 c0       	rjmp	.+46     	; 0x5f4 <__stack+0xf5>
 5c6:	a1 fc       	sbrc	r10, 1
 5c8:	03 c0       	rjmp	.+6      	; 0x5d0 <__stack+0xd1>
 5ca:	88 e7       	ldi	r24, 0x78	; 120
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <__stack+0xd5>
 5d0:	88 e5       	ldi	r24, 0x58	; 88
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	b6 01       	movw	r22, r12
 5d6:	0c c0       	rjmp	.+24     	; 0x5f0 <__stack+0xf1>
 5d8:	8a 2d       	mov	r24, r10
 5da:	86 78       	andi	r24, 0x86	; 134
 5dc:	59 f0       	breq	.+22     	; 0x5f4 <__stack+0xf5>
 5de:	a1 fe       	sbrs	r10, 1
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <__stack+0xe7>
 5e2:	8b e2       	ldi	r24, 0x2B	; 43
 5e4:	01 c0       	rjmp	.+2      	; 0x5e8 <__stack+0xe9>
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	a7 fc       	sbrc	r10, 7
 5ea:	8d e2       	ldi	r24, 0x2D	; 45
 5ec:	b6 01       	movw	r22, r12
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 5f4:	89 14       	cp	r8, r9
 5f6:	38 f4       	brcc	.+14     	; 0x606 <__stack+0x107>
 5f8:	b6 01       	movw	r22, r12
 5fa:	80 e3       	ldi	r24, 0x30	; 48
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 602:	9a 94       	dec	r9
 604:	f7 cf       	rjmp	.-18     	; 0x5f4 <__stack+0xf5>
 606:	8a 94       	dec	r8
 608:	f3 01       	movw	r30, r6
 60a:	e8 0d       	add	r30, r8
 60c:	f1 1d       	adc	r31, r1
 60e:	80 81       	ld	r24, Z
 610:	b6 01       	movw	r22, r12
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 618:	81 10       	cpse	r8, r1
 61a:	f5 cf       	rjmp	.-22     	; 0x606 <__stack+0x107>
 61c:	22 20       	and	r2, r2
 61e:	09 f4       	brne	.+2      	; 0x622 <__stack+0x123>
 620:	42 ce       	rjmp	.-892    	; 0x2a6 <vfprintf+0x24>
 622:	b6 01       	movw	r22, r12
 624:	80 e2       	ldi	r24, 0x20	; 32
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 62c:	2a 94       	dec	r2
 62e:	f6 cf       	rjmp	.-20     	; 0x61c <__stack+0x11d>
 630:	f6 01       	movw	r30, r12
 632:	86 81       	ldd	r24, Z+6	; 0x06
 634:	97 81       	ldd	r25, Z+7	; 0x07
 636:	02 c0       	rjmp	.+4      	; 0x63c <__stack+0x13d>
 638:	8f ef       	ldi	r24, 0xFF	; 255
 63a:	9f ef       	ldi	r25, 0xFF	; 255
 63c:	2b 96       	adiw	r28, 0x0b	; 11
 63e:	e2 e1       	ldi	r30, 0x12	; 18
 640:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <__epilogue_restores__>

00000644 <strnlen_P>:
 644:	fc 01       	movw	r30, r24
 646:	05 90       	lpm	r0, Z+
 648:	61 50       	subi	r22, 0x01	; 1
 64a:	70 40       	sbci	r23, 0x00	; 0
 64c:	01 10       	cpse	r0, r1
 64e:	d8 f7       	brcc	.-10     	; 0x646 <strnlen_P+0x2>
 650:	80 95       	com	r24
 652:	90 95       	com	r25
 654:	8e 0f       	add	r24, r30
 656:	9f 1f       	adc	r25, r31
 658:	08 95       	ret

0000065a <strnlen>:
 65a:	fc 01       	movw	r30, r24
 65c:	61 50       	subi	r22, 0x01	; 1
 65e:	70 40       	sbci	r23, 0x00	; 0
 660:	01 90       	ld	r0, Z+
 662:	01 10       	cpse	r0, r1
 664:	d8 f7       	brcc	.-10     	; 0x65c <strnlen+0x2>
 666:	80 95       	com	r24
 668:	90 95       	com	r25
 66a:	8e 0f       	add	r24, r30
 66c:	9f 1f       	adc	r25, r31
 66e:	08 95       	ret

00000670 <fputc>:
 670:	0f 93       	push	r16
 672:	1f 93       	push	r17
 674:	cf 93       	push	r28
 676:	df 93       	push	r29
 678:	fb 01       	movw	r30, r22
 67a:	23 81       	ldd	r18, Z+3	; 0x03
 67c:	21 fd       	sbrc	r18, 1
 67e:	03 c0       	rjmp	.+6      	; 0x686 <fputc+0x16>
 680:	8f ef       	ldi	r24, 0xFF	; 255
 682:	9f ef       	ldi	r25, 0xFF	; 255
 684:	2c c0       	rjmp	.+88     	; 0x6de <fputc+0x6e>
 686:	22 ff       	sbrs	r18, 2
 688:	16 c0       	rjmp	.+44     	; 0x6b6 <fputc+0x46>
 68a:	46 81       	ldd	r20, Z+6	; 0x06
 68c:	57 81       	ldd	r21, Z+7	; 0x07
 68e:	24 81       	ldd	r18, Z+4	; 0x04
 690:	35 81       	ldd	r19, Z+5	; 0x05
 692:	42 17       	cp	r20, r18
 694:	53 07       	cpc	r21, r19
 696:	44 f4       	brge	.+16     	; 0x6a8 <fputc+0x38>
 698:	a0 81       	ld	r26, Z
 69a:	b1 81       	ldd	r27, Z+1	; 0x01
 69c:	9d 01       	movw	r18, r26
 69e:	2f 5f       	subi	r18, 0xFF	; 255
 6a0:	3f 4f       	sbci	r19, 0xFF	; 255
 6a2:	31 83       	std	Z+1, r19	; 0x01
 6a4:	20 83       	st	Z, r18
 6a6:	8c 93       	st	X, r24
 6a8:	26 81       	ldd	r18, Z+6	; 0x06
 6aa:	37 81       	ldd	r19, Z+7	; 0x07
 6ac:	2f 5f       	subi	r18, 0xFF	; 255
 6ae:	3f 4f       	sbci	r19, 0xFF	; 255
 6b0:	37 83       	std	Z+7, r19	; 0x07
 6b2:	26 83       	std	Z+6, r18	; 0x06
 6b4:	14 c0       	rjmp	.+40     	; 0x6de <fputc+0x6e>
 6b6:	8b 01       	movw	r16, r22
 6b8:	ec 01       	movw	r28, r24
 6ba:	fb 01       	movw	r30, r22
 6bc:	00 84       	ldd	r0, Z+8	; 0x08
 6be:	f1 85       	ldd	r31, Z+9	; 0x09
 6c0:	e0 2d       	mov	r30, r0
 6c2:	09 95       	icall
 6c4:	89 2b       	or	r24, r25
 6c6:	e1 f6       	brne	.-72     	; 0x680 <fputc+0x10>
 6c8:	d8 01       	movw	r26, r16
 6ca:	16 96       	adiw	r26, 0x06	; 6
 6cc:	8d 91       	ld	r24, X+
 6ce:	9c 91       	ld	r25, X
 6d0:	17 97       	sbiw	r26, 0x07	; 7
 6d2:	01 96       	adiw	r24, 0x01	; 1
 6d4:	17 96       	adiw	r26, 0x07	; 7
 6d6:	9c 93       	st	X, r25
 6d8:	8e 93       	st	-X, r24
 6da:	16 97       	sbiw	r26, 0x06	; 6
 6dc:	ce 01       	movw	r24, r28
 6de:	df 91       	pop	r29
 6e0:	cf 91       	pop	r28
 6e2:	1f 91       	pop	r17
 6e4:	0f 91       	pop	r16
 6e6:	08 95       	ret

000006e8 <__ultoa_invert>:
 6e8:	fa 01       	movw	r30, r20
 6ea:	aa 27       	eor	r26, r26
 6ec:	28 30       	cpi	r18, 0x08	; 8
 6ee:	51 f1       	breq	.+84     	; 0x744 <__ultoa_invert+0x5c>
 6f0:	20 31       	cpi	r18, 0x10	; 16
 6f2:	81 f1       	breq	.+96     	; 0x754 <__ultoa_invert+0x6c>
 6f4:	e8 94       	clt
 6f6:	6f 93       	push	r22
 6f8:	6e 7f       	andi	r22, 0xFE	; 254
 6fa:	6e 5f       	subi	r22, 0xFE	; 254
 6fc:	7f 4f       	sbci	r23, 0xFF	; 255
 6fe:	8f 4f       	sbci	r24, 0xFF	; 255
 700:	9f 4f       	sbci	r25, 0xFF	; 255
 702:	af 4f       	sbci	r26, 0xFF	; 255
 704:	b1 e0       	ldi	r27, 0x01	; 1
 706:	3e d0       	rcall	.+124    	; 0x784 <__ultoa_invert+0x9c>
 708:	b4 e0       	ldi	r27, 0x04	; 4
 70a:	3c d0       	rcall	.+120    	; 0x784 <__ultoa_invert+0x9c>
 70c:	67 0f       	add	r22, r23
 70e:	78 1f       	adc	r23, r24
 710:	89 1f       	adc	r24, r25
 712:	9a 1f       	adc	r25, r26
 714:	a1 1d       	adc	r26, r1
 716:	68 0f       	add	r22, r24
 718:	79 1f       	adc	r23, r25
 71a:	8a 1f       	adc	r24, r26
 71c:	91 1d       	adc	r25, r1
 71e:	a1 1d       	adc	r26, r1
 720:	6a 0f       	add	r22, r26
 722:	71 1d       	adc	r23, r1
 724:	81 1d       	adc	r24, r1
 726:	91 1d       	adc	r25, r1
 728:	a1 1d       	adc	r26, r1
 72a:	20 d0       	rcall	.+64     	; 0x76c <__ultoa_invert+0x84>
 72c:	09 f4       	brne	.+2      	; 0x730 <__ultoa_invert+0x48>
 72e:	68 94       	set
 730:	3f 91       	pop	r19
 732:	2a e0       	ldi	r18, 0x0A	; 10
 734:	26 9f       	mul	r18, r22
 736:	11 24       	eor	r1, r1
 738:	30 19       	sub	r19, r0
 73a:	30 5d       	subi	r19, 0xD0	; 208
 73c:	31 93       	st	Z+, r19
 73e:	de f6       	brtc	.-74     	; 0x6f6 <__ultoa_invert+0xe>
 740:	cf 01       	movw	r24, r30
 742:	08 95       	ret
 744:	46 2f       	mov	r20, r22
 746:	47 70       	andi	r20, 0x07	; 7
 748:	40 5d       	subi	r20, 0xD0	; 208
 74a:	41 93       	st	Z+, r20
 74c:	b3 e0       	ldi	r27, 0x03	; 3
 74e:	0f d0       	rcall	.+30     	; 0x76e <__ultoa_invert+0x86>
 750:	c9 f7       	brne	.-14     	; 0x744 <__ultoa_invert+0x5c>
 752:	f6 cf       	rjmp	.-20     	; 0x740 <__ultoa_invert+0x58>
 754:	46 2f       	mov	r20, r22
 756:	4f 70       	andi	r20, 0x0F	; 15
 758:	40 5d       	subi	r20, 0xD0	; 208
 75a:	4a 33       	cpi	r20, 0x3A	; 58
 75c:	18 f0       	brcs	.+6      	; 0x764 <__ultoa_invert+0x7c>
 75e:	49 5d       	subi	r20, 0xD9	; 217
 760:	31 fd       	sbrc	r19, 1
 762:	40 52       	subi	r20, 0x20	; 32
 764:	41 93       	st	Z+, r20
 766:	02 d0       	rcall	.+4      	; 0x76c <__ultoa_invert+0x84>
 768:	a9 f7       	brne	.-22     	; 0x754 <__ultoa_invert+0x6c>
 76a:	ea cf       	rjmp	.-44     	; 0x740 <__ultoa_invert+0x58>
 76c:	b4 e0       	ldi	r27, 0x04	; 4
 76e:	a6 95       	lsr	r26
 770:	97 95       	ror	r25
 772:	87 95       	ror	r24
 774:	77 95       	ror	r23
 776:	67 95       	ror	r22
 778:	ba 95       	dec	r27
 77a:	c9 f7       	brne	.-14     	; 0x76e <__ultoa_invert+0x86>
 77c:	00 97       	sbiw	r24, 0x00	; 0
 77e:	61 05       	cpc	r22, r1
 780:	71 05       	cpc	r23, r1
 782:	08 95       	ret
 784:	9b 01       	movw	r18, r22
 786:	ac 01       	movw	r20, r24
 788:	0a 2e       	mov	r0, r26
 78a:	06 94       	lsr	r0
 78c:	57 95       	ror	r21
 78e:	47 95       	ror	r20
 790:	37 95       	ror	r19
 792:	27 95       	ror	r18
 794:	ba 95       	dec	r27
 796:	c9 f7       	brne	.-14     	; 0x78a <__ultoa_invert+0xa2>
 798:	62 0f       	add	r22, r18
 79a:	73 1f       	adc	r23, r19
 79c:	84 1f       	adc	r24, r20
 79e:	95 1f       	adc	r25, r21
 7a0:	a0 1d       	adc	r26, r0
 7a2:	08 95       	ret

000007a4 <__prologue_saves__>:
 7a4:	2f 92       	push	r2
 7a6:	3f 92       	push	r3
 7a8:	4f 92       	push	r4
 7aa:	5f 92       	push	r5
 7ac:	6f 92       	push	r6
 7ae:	7f 92       	push	r7
 7b0:	8f 92       	push	r8
 7b2:	9f 92       	push	r9
 7b4:	af 92       	push	r10
 7b6:	bf 92       	push	r11
 7b8:	cf 92       	push	r12
 7ba:	df 92       	push	r13
 7bc:	ef 92       	push	r14
 7be:	ff 92       	push	r15
 7c0:	0f 93       	push	r16
 7c2:	1f 93       	push	r17
 7c4:	cf 93       	push	r28
 7c6:	df 93       	push	r29
 7c8:	cd b7       	in	r28, 0x3d	; 61
 7ca:	de b7       	in	r29, 0x3e	; 62
 7cc:	ca 1b       	sub	r28, r26
 7ce:	db 0b       	sbc	r29, r27
 7d0:	0f b6       	in	r0, 0x3f	; 63
 7d2:	f8 94       	cli
 7d4:	de bf       	out	0x3e, r29	; 62
 7d6:	0f be       	out	0x3f, r0	; 63
 7d8:	cd bf       	out	0x3d, r28	; 61
 7da:	09 94       	ijmp

000007dc <__epilogue_restores__>:
 7dc:	2a 88       	ldd	r2, Y+18	; 0x12
 7de:	39 88       	ldd	r3, Y+17	; 0x11
 7e0:	48 88       	ldd	r4, Y+16	; 0x10
 7e2:	5f 84       	ldd	r5, Y+15	; 0x0f
 7e4:	6e 84       	ldd	r6, Y+14	; 0x0e
 7e6:	7d 84       	ldd	r7, Y+13	; 0x0d
 7e8:	8c 84       	ldd	r8, Y+12	; 0x0c
 7ea:	9b 84       	ldd	r9, Y+11	; 0x0b
 7ec:	aa 84       	ldd	r10, Y+10	; 0x0a
 7ee:	b9 84       	ldd	r11, Y+9	; 0x09
 7f0:	c8 84       	ldd	r12, Y+8	; 0x08
 7f2:	df 80       	ldd	r13, Y+7	; 0x07
 7f4:	ee 80       	ldd	r14, Y+6	; 0x06
 7f6:	fd 80       	ldd	r15, Y+5	; 0x05
 7f8:	0c 81       	ldd	r16, Y+4	; 0x04
 7fa:	1b 81       	ldd	r17, Y+3	; 0x03
 7fc:	aa 81       	ldd	r26, Y+2	; 0x02
 7fe:	b9 81       	ldd	r27, Y+1	; 0x01
 800:	ce 0f       	add	r28, r30
 802:	d1 1d       	adc	r29, r1
 804:	0f b6       	in	r0, 0x3f	; 63
 806:	f8 94       	cli
 808:	de bf       	out	0x3e, r29	; 62
 80a:	0f be       	out	0x3f, r0	; 63
 80c:	cd bf       	out	0x3d, r28	; 61
 80e:	ed 01       	movw	r28, r26
 810:	08 95       	ret

00000812 <_exit>:
 812:	f8 94       	cli

00000814 <__stop_program>:
 814:	ff cf       	rjmp	.-2      	; 0x814 <__stop_program>
